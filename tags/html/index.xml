<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>html | A perfect autumn day</title>
    <link>/tags/html/</link>
      <atom:link href="/tags/html/index.xml" rel="self" type="application/rss+xml" />
    <description>html</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2020</copyright><lastBuildDate>Sun, 06 Jan 2019 00:00:00 +0900</lastBuildDate>
    <image>
      <url>/img/icon-192.png</url>
      <title>html</title>
      <link>/tags/html/</link>
    </image>
    
    <item>
      <title>Emacsのorg-modeを保存すると自動的にhtmlにexportされブラウザーが更新されるようにする</title>
      <link>/post/auto_html_export/</link>
      <pubDate>Sun, 06 Jan 2019 00:00:00 +0900</pubDate>
      <guid>/post/auto_html_export/</guid>
      <description>&lt;p&gt;org-modeで文書を書いていてhtmlにexportする際は，C-e h oとするわけだが，段々とこれが面倒になってくることがある．そこで，ネットを探ってみると，やはり，なんでも載ってるredditにhtml exportを自動化する関数の記事があった．&lt;/p&gt;
&lt;div class=&#34;ox-hugo-toc toc&#34;&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div class=&#34;heading&#34;&gt;Table of Contents&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#toggle-org-html-export-on-save&#34;&gt;toggle-org-html-export-on-save&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#directory%E3%81%AE%E5%86%85%E5%AE%B9%E3%81%8B%E3%82%99%E5%A4%89%E6%9B%B4%E3%81%95%E3%82%8C%E3%82%8B%E3%81%A8-%E8%87%AA%E5%8B%95%E3%81%A6%E3%82%99html%E3%82%92%E5%86%8D%E8%AA%AD%E8%BE%BC%E3%81%99%E3%82%8B&#34;&gt;directoryの内容が変更されると，自動でhtmlを再読込する．&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95&#34;&gt;使用方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;!--endtoc--&gt;
&lt;h2 id=&#34;toggle-org-html-export-on-save&#34;&gt;toggle-org-html-export-on-save&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;情報元：&lt;a href=&#34;https://www.reddit.com/r/emacs/comments/4golh1/how%5Fto%5Fauto%5Fexport%5Fhtml%5Fwhen%5Fsaving%5Fin%5Forgmode/?sort=old&#34;&gt;How to auto export html when saving in org-mode?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例によって，下記のようにinit.orgに書き込めばよい．&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;begin_src emacs-lisp
(defun toggle-org-html-export-on-save ()
  (interactive)
  (&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (memq &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org-html-export-to-html&lt;/span&gt; after-save-hook)
      (&lt;span style=&#34;color:#66d9ef&#34;&gt;progn&lt;/span&gt;
        (remove-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;after-save-hook&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org-html-export-to-html&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
        (message &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Disabled org html export on save for current buffer...&amp;#34;&lt;/span&gt;))
    (add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;after-save-hook&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org-html-export-to-html&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
    (message &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Enabled org html export on save for current buffer...&amp;#34;&lt;/span&gt;)))
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;end_src
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これで，toggle-org-html-export-on-saveで，htmlを自動で出力するかどうかを切り替え可能となる．しかし，これだけでは，org文書を保存するたびにブラウザーを手動でreloadしないといけなくなり，面倒である．自動でreloadしてくれるコマンドがあれば便利である．探してみると，これもネットに転がっていた．&lt;/p&gt;
&lt;h2 id=&#34;directoryの内容が変更されると-自動でhtmlを再読込する&#34;&gt;directoryの内容が変更されると，自動でhtmlを再読込する．&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;情報元：&lt;a href=&#34;http://brettterpstra.com/2011/03/07/watch-for-file-changes-and-refresh-your-browser-automatically/&#34;&gt;Watch for file changes and refresh your browser automatically&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;上記サイトに有るrubyのスクリプトが使えそうなので，頂いた．&lt;/li&gt;
&lt;li&gt;rubyのインストールについては，以下のようなサイトを参考
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/shinkuFencer/items/3679cfd966f6a61ccd1b&#34;&gt;MacにHomeBrew,rbenv,bundlerをインストールする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/prgseek/items/ff037cc6134ff9303c67&#34;&gt;Ruby入門 01.導入（Macに最新版のRubyを入れる）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/TAByasu/items/47c6cfbeeafad39eda07&#34;&gt;Ruby初学者のRuby On Rails 環境構築【Mac】&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;しかし，上記サイトのスクリプトをそのまま使用するとと，reloadの際にページの先頭まで戻ってしまい不便！&lt;/li&gt;
&lt;li&gt;結局，上記サイトのFirefox用のスクリプトを参考に少し書き換えた下記のSafari用のスクリプトを使用すると，reloadの際に先頭まで戻らないので，こちらを使用することとした．&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env ruby
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# watch.rb by Brett Terpstra, 2011 &amp;lt;http://brettterpstra.com&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# with credit to Carlo Zottmann &amp;lt;https://github.com/carlo/haml-sass-file-watcher&amp;gt;&lt;/span&gt;

trap&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SIGINT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; exit &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ARGV.length &amp;lt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
   puts &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Usage: #{&lt;/span&gt;$0&lt;span style=&#34;color:#e6db74&#34;&gt;} watch_folder keyword&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
   puts &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Example: #{&lt;/span&gt;$0&lt;span style=&#34;color:#e6db74&#34;&gt;} . mywebproject&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
   exit
   end

   dev_extension &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dev&amp;#39;&lt;/span&gt;
   filetypes &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;css&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;html&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;htm&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;php&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;erb&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;less&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
   watch_folder &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ARGV&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
   keyword &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ARGV&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
   puts &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Watching #{watch_folder} and subfolders for changes in project files...&amp;#34;&lt;/span&gt;

   &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; true &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
         files &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
         filetypes.each &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;|type|
files &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; Dir.glob&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; File.join&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; watch_folder, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;**&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*.#{type}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
         new_hash &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; files.collect &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;|f| &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; f, File.stat&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;f&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.mtime.to_i &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
         hash &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; new_hash
         diff_hash &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; new_hash - hash

         unless diff_hash.empty?
         hash &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; new_hash

         diff_hash.each &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; |df|
             puts &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Detected change in #{df[0]}, refreshing&amp;#34;&lt;/span&gt;
         %x&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;osascript&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;ENDGAME
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                tell app &amp;#34;Safari&amp;#34; to activate
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                tell app &amp;#34;System Events&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                     keystroke &amp;#34;r&amp;#34; using command down
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                end tell
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ENDGAME&lt;/span&gt;
           &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
         end
         end

         sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
         end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;このスクリプトにwatch_safari.rbという名前をつけてパスが通っている/usr/local/binに保存し，chomod a+x watch_safari.rbとして実行権限を付けた．&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Usage: /usr/local/bin/watch_safari.rb watch_folder keyword&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;パスを通しておけば，watch_safari.rb watch_folder keyword で大丈夫&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用方法&#34;&gt;使用方法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;/Data/Hoge/Fuga/hogefuga.orgを書いているとすると以下のようにそのディレクトリをみはらせておく．&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ cd /Data/Hoge
$ watch_safari.rb Hoge hogefuga.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;org-modeでhogefuga.orgを書きはじめるときに，M-x toggle-org-html-export-on-save として保存するたびに自動的に新たなhtmlがexportされるようにする．&lt;/li&gt;
&lt;li&gt;最初だけは，C-e h oでhtmlをexportして，safariでhogefuga.htmlを開いておく．&lt;/li&gt;
&lt;li&gt;以降は，hogefuga.org文書を保存するたびに，現在見ている場所に戻った状態で最新のhtmlに更新されるようになる．便利である．&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上はOSX上のSafariを使用している場合であるが，他のブラウザーでも少し変更するだけで同じことができるはずである．&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Org-modeでhtml exportの際のthemeについて</title>
      <link>/post/org-html-export-theme/</link>
      <pubDate>Sun, 16 Dec 2018 00:00:00 +0900</pubDate>
      <guid>/post/org-html-export-theme/</guid>
      <description>&lt;p&gt;org-modeで文書を書いてhtmlにexportすると，素のままでは，なんの愛想もない．特にいくつかの項目をまとめた要約などを並べていくときは，side columnなどがあって，すぐに行きたいところに飛べるようになっていると嬉しい．ということで，今回はorg-modeをhtmlにexportするときのthemeがテーマである．．．．．&lt;/p&gt;
&lt;p&gt;とにかく，たくさんのthemesが存在する．まずは以下のサイトをチェック，というか以下を読めばこのブログは読まなくても良いような．．．(^^;;;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/sambatriste/items/2dc9f81cbf1e82d7429a&#34;&gt;org-modeのHTMLテーマ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/sambatriste/items/c8e70368ee5fd092096b&#34;&gt;org-modeのHTMLテーマ第2弾&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fniessen/org-html-themes#how-to-export-org-mode-files-into-awesome-html-in-2-minutes&#34;&gt;How to export Org mode files into awesome HTML in 2 minutes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/thi-ng/org-spec&#34;&gt;org-spec&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;私のお気に入りは，ReadTheOrg（上記の1, 3にある）とorg-spec（上記の4）である．&lt;/p&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;

&lt;h2 id=&#34;readtheorg&#34;&gt;ReadTheOrg&lt;/h2&gt;
&lt;p&gt;これは&lt;a href=&#34;https://docs.readthedocs.io/en/latest/&#34;&gt;Read the Docs&lt;/a&gt;で使われているthemeのcloneである．一番簡単な使い方は，3にあるようにsetup fileをorg fileのpreambleに書いておくことである．&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;SETUPFILE: https://fniessen.github.io/org-html-themes/setup/theme-readtheorg.setup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;あるいは，3からOrg-HTML themes projectをダウンロードしてきて解凍しローカルの&amp;quot;setup file&amp;quot;へのパスを書き込めば，ネットの接続に依存せずにexportできるようになる．たとえば，/Hoge/Fuga/org-html-themes-master/setup/theme-readtheorg.setupに設定ファイルがあるとすると以下のようにすれば良い．&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;SETUPFILE: /Hoge/Fuga/org-html-themes-master/setup/theme-readtheorg.setup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以下に研究会で発表するスライド原稿を作る下準備として，実際に10個の論文をまとめたorg fileの一部を掲示しておく．左に論文のタイトルが並び，見ている論文の小見出しが自動的に展開される．subheadの色も設定されており，読みやすい．デザインもプロっぽい印象である．書いた内容にかかわらず，なんとなく賢くなったような気分になれる（笑）．&lt;/p&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/ReadTheOrg.jpg&#34; &gt;

&lt;img src=&#34;/img/ReadTheOrg.jpg&#34; width=&#34;100%&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;

&lt;h2 id=&#34;org-spec&#34;&gt;&lt;a href=&#34;https://github.com/thi-ng/org-spec&#34;&gt;org-spec&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;An Org-mode template for technical specification documents and HTML publishing. とのことで，技術よりのthemeである．特徴としては，Ditaa, Graphviz &amp;amp; PlantUMLなどによりテキストベースで図が書ける．表に対応，自動的にアップデートするフィールド，PDF生成にも対応，コードブロックの基本的なsyntax highlightingなどがある．実際の例として&lt;a href=&#34;https://demo.thi.ng/org-spec/&#34;&gt;https://demo.thi.ng/org-spec/&lt;/a&gt;がある．&lt;/p&gt;
&lt;p&gt;こちらの使い方は少しだけ面倒である．リンク先からorg-specをダウンロードして解凍する．ここで，style.cssが/Hoge/Fuga/org-spec-master/css/style.cssに保存されたとする．ダウンロードして来たファイルに含まれているindex.orgに全て書いてあるので，それを真似てorg fileのpreambleに次のように書いておく．&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;HTML_HEAD: &amp;lt;link href=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://fonts.googleapis.com/css?family=Roboto+Slab:400,700|Inconsolata:400,700&amp;#34;&lt;/span&gt; rel=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt; type=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/css&amp;#34;&lt;/span&gt; /&amp;gt;
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;HTML_HEAD: &amp;lt;link href=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/Hoge/Fuga/org-spec-master/css/style.css&amp;#34;&lt;/span&gt; rel=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt; type=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/css&amp;#34;&lt;/span&gt; /&amp;gt;
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;AUTHOR: taipapa
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;EMAIL: your@mail.address

&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;HTML: &amp;lt;div class=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;outline-2&amp;#34;&lt;/span&gt; id=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;meta&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&amp;gt;&lt;/span&gt;
| *Author* | {{{author}}} ({{{email}}})    |
| *Date*   | {{{time(%Y-%m-%d %H:%M:%S)}}} |
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;HTML: &amp;lt;/div&amp;gt;

&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;TOC: headlines &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以下に前述の論文のまとめをこのcssでexportしたものを掲示しておく．印象がかなり変わると思う．subheadなどは最初から展開されている．ReadTheOrgよりもビジネスライクな感じであるが，よりスマートな気もする．その日の気分によって，この2つを使い分けている．&lt;/p&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/org-spec.png&#34; &gt;

&lt;img src=&#34;/img/org-spec.png&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;

&lt;p&gt;以上あげた2つ以外にも無数のthemeが存在する．また，自分でthemeを作ってしまう剛の者もいらっしゃるので，あちこちを探してみるのも一興．．．(^o^)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Emacsのorg-modeで論文を書く（その5：htmlへのexportの際のフォントの色の変更，ハイライトなど）（2018年12月19日追記）（2020年1月12日追記）</title>
      <link>/post/html_export/</link>
      <pubDate>Mon, 10 Dec 2018 00:00:00 +0900</pubDate>
      <guid>/post/html_export/</guid>
      <description>&lt;p&gt;学会発表や論文作成にあたっては，当然のことながら，その分野の他の研究者の論文を読んでまとめるなどの作業を行う．そこで，論文の要旨などをorg-modeにざっとまとめておくと，pdfにもhtmlにもtextにもexport出来て便利である．pdfは印刷に向いているが，htmlは多くの論文をいっぺんに見るのに向いており，また，compileの時間もpdfより圧倒的に速い．また，色を変えたり，ハイライトしたりするのもhtmlなら容易である．そこで，今回は，org-modeからhtmlへexportする際の有用な小技について書いてみたい．&lt;/p&gt;
&lt;h2 id=&#34;org-macros&#34;&gt;&lt;a href=&#34;https://github.com/fniessen/org-macros&#34;&gt;Org Macros&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;フォントの色を変更する方法はいろいろあるが，ハイライトや背景の色の変更までできるこの &lt;a href=&#34;https://github.com/fniessen/org-macros&#34;&gt;Org Macros&lt;/a&gt;が一番便利である．内容は，org-modeの便利なマクロ集である．リンク先からダウンロードして，適当なところに保存し，解凍しておく．ここでは，/Users/taipapa/hoge/fuga/org-macros.setupに置くことにする．使い方は簡単で上記のwebsiteに書いてあるとおり，各org fileの先頭に以下のように記述してorg-macros.setupの場所を教えてやれば良い．&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;INCLUDE: /Users/taipapa/hoge/fuga/org-macros.setup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これだけである．&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;del&gt;注意事項としては，このブログはox-hugoで書いているが，ox-hugoの場合は文書の先頭に上記を書いても効かない．各ポストのpropertyのあとに書いておけば効く．各ポストごとに設定するようになっているらしい．．．．．（全国15人？ぐらいの人にしか意味のない注意書きである）&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;上記に関しては-ox-hugoの作者であるkaushal-modi氏から以下のような指摘を頂いた-12月19日追記&#34;&gt;上記に関しては，ox-hugoの作者であるKaushal Modi氏から以下のような指摘を頂いた．（12月19日追記）&lt;/h3&gt;
&lt;div class=&#34;panel&#34;&gt;
  &lt;div&gt;&lt;/div&gt;
&lt;p&gt;Can you try using #+setupfile instead of #+include? As an example, here is my blog Org source that I export using ox-hugo ( &lt;a href=&#34;https://gitlab.com/kaushalm&#34;&gt;https://gitlab.com/kaushalm&lt;/a&gt;&amp;hellip; ), and here is the setup file tha t I &amp;ldquo;include&amp;rdquo; using the more appropriate #+setupfile ( &lt;a href=&#34;https://gitlab.com/kaushalm&#34;&gt;https://gitlab.com/kaushalm&lt;/a&gt;&amp;hellip; ).&lt;/p&gt;
&lt;p&gt;As you see, I use a lot of Org macros, and they all work in my &amp;ldquo;one post per subtree&amp;rdquo; flow.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;ということで，ox-hugoの場合は，以下のように文書の先頭に書いておけば，one-post per subtreeの投稿全てにorg-macroが効くことを確認した．&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;setupfile: /Users/taipapa/hoge/fuga/org-macros.setup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;こんなブログにまで目を通してコメントしてくれるのには驚いた．親切な方である．日本語が読める人なのかとも思ったが，どうやらGoogleの翻訳を利用されているようだ．このページだと，&lt;a href=&#34;https://translate.google.com/translate?depth=1&amp;amp;sl=auto&amp;amp;sp=nmt4&amp;amp;tl=en&amp;amp;u=https://taipapamotohus.com/post/html%5Fexport/&amp;amp;xid=17259,1500004,15700019,15700124,15700149,15700186,15700190,15700201,15700237,15700242#comment-4245099680&#34;&gt;A Perfect Autumn Day&lt;/a&gt;に行くと翻訳版を見ることができる．その翻訳レベルにも今更ながら感心した．．．&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;残念ながら，LaTeXへのexportでは，この方法による色の変更などは（現在のところ）効かない．&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;いくつか使い方の例をあげておく&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;{{{color(red, 赤くなるかな&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;？&lt;/span&gt;)}}}
*{{{color(blue, ボールドで赤くなるかな&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;？&lt;/span&gt;)}}}*
{{{highlight(yellow, 黄色にハイライトされるかな&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;？&lt;/span&gt;)}}}
*{{{highlight(yellow, 黄色にハイライトされて文字はボールドになるかな&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;？&lt;/span&gt;)}}}*
{{{bgcolor(cyan, 背景がシアンになるかな&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;？&lt;/span&gt;)}}}
*{{{bgcolor(cyan, 背景がシアンになって文字はボールドになるかな&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;？&lt;/span&gt;)}}}*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これが以下のように表示される．&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color: red&#34;&gt; 赤くなるかな？&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;span style=&#34;color: red&#34;&gt; ボールドで赤くなるかな？&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;background-color: yellow;&#34;&gt; 黄色にハイライトされるかな？&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;span style=&#34;background-color: yellow;&#34;&gt; 黄色にハイライトされて文字はボールドになるかな？&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;div style=&#34;background-color: cyan;&#34;&gt; 背景がシアンになるかな？&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;div style=&#34;background-color: cyan;&#34;&gt; 背景がシアンになって文字はボールドになるかな？&lt;/div&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上記以外にも多くのマクロが含まれており，そちらも人によっては有用かもしれない．少しだけ例をあげておく．以下はパネルの例．&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;{{{begin_panel}}} Panel example This is a formatted &lt;span style=&#34;color:#66d9ef&#34;&gt;block&lt;/span&gt; of text&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;…&lt;/span&gt; {{{end_panel}}}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これが，&lt;/p&gt;
&lt;div class=&#34;panel&#34;&gt;&lt;p&gt; Panel example This is a formatted block of text… &lt;/p&gt;&lt;/div&gt;
となる．マニュアルでは以下の使い方を薦めている．
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;begin_panel
*Panel example* \\
This is a formatted &lt;span style=&#34;color:#66d9ef&#34;&gt;block&lt;/span&gt; of text...
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;end_panel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;panel&#34;&gt;
  &lt;div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Panel example&lt;/strong&gt; &lt;br /&gt;
This is a formatted block of text&amp;hellip;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;なお，org-modeのマクロ自体に関しては，org-modeのマニュアルの &lt;strong&gt;12.5 Macro replacement&lt;/strong&gt; を参考にしていただきたい．&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;strong&gt;2020年1月12日　Hugoを使用している人のための追記&lt;/strong&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;2019年の年末にMacBook Pro 16 inch (Catalina)に買い替えた時，Hugoもv.０.61にupgradeした．その際に，HugoのMarkdown用のdefault libraryがGoldmarkに変更になっていることに気がついていなかった．そのためにこのページのフォントの色の変更が働かなくなっていた．数日前に気がついたので，修正した．詳細は以下のサイトを参考．&lt;/p&gt;
&lt;p&gt;参考サイト1：&lt;a href=&#34;https://gohugo.io/news/0.60.0-relnotes/&#34;&gt;Goldmark – CommonMark compliant, GitHub flavored, fast and flexible – is the new default library for Markdown in Hugo.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;参考サイト2：&lt;a href=&#34;https://discourse.gohugo.io/t/ox-hugo-go-org/21254/7&#34;&gt;Just wonder if the migration to Goldmark is going to be smooth ?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上記のサイトには，「マークダウンファイルにinline HTMLがたくさんあるのなら，unsafe modeを有効にしないといけないかもね」とあるので，config/default/config.tomlの最後に，&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-nil&#34; data-lang=&#34;nil&#34;&gt;[markup]
  [markup.goldmark]
    [markup.goldmark.renderer]
      unsafe = true
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;を追加した．これで，Markdownがうまく働くようになり，再びフォントの色も変更されるようになった．&lt;/p&gt;
&lt;h2 id=&#34;exporting-org-mode-to-html-in-place-coloring&#34;&gt;&lt;a href=&#34;https://stackoverflow.com/questions/21340380/exporting-org-mode-to-html-in-place-coloring&#34;&gt;Exporting org-mode to HTML: In-place coloring&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;フォントの色を変える別の方法である．リンク先にある通り，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;この文章は， *@@html:&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;font&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;color &lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;&amp;gt;@@青のボールド@@html:&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;font&lt;/span&gt;&amp;gt;@@*になって欲しい！
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これが以下のように表示される．&lt;br /&gt;
この文章は， &lt;strong&gt;&lt;font color = &#34;red&#34;&gt;赤のボールド&lt;/font&gt;&lt;/strong&gt; になって欲しい！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;org-modeのマニュアルの &lt;strong&gt;12.9.5 Quoting HTML tags&lt;/strong&gt; も参考のこと&lt;/p&gt;
&lt;p&gt;こちらは設定を必要としないが，やはり，最初に説明したマクロの方がいろいろ出来て便利である．&lt;/p&gt;
&lt;p&gt;次回は，htmlをexportする際のCSSについてまとめてみたい．&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Emacsのorg-modeで論文を書く（その1：pdfとhtmlへの出力）</title>
      <link>/post/org-mode_paper_1/</link>
      <pubDate>Sat, 01 Sep 2018 00:00:00 +0900</pubDate>
      <guid>/post/org-mode_paper_1/</guid>
      <description>&lt;p&gt;私がEmacsを使用している理由の一番大きなものはorg-modeである．あらゆる文書作成にorg-modeを用いている．org-modeを使って論文を書くことに関しては，ググってもらえばおわかりのように，ネット上に山のように情報が存在する．「屋上屋を架してどうする」と言う自分の中の声を押し殺し，あくまで備忘録ということで，あえてここにまとめておく．なお，私はGTDのツールとしてはorg-modeを全く使用していないので，その種の情報はここにはまったくないことをお断りしておく．&lt;/p&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;

&lt;h2 id=&#34;目的&#34;&gt;目的&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;org-modeからlatex経由で，文献がnumberingされ文献リストも付いたpdfを出力できるようにする&lt;/li&gt;
&lt;li&gt;org-modeから，文献がnumberingされ文献リストも付いたhtmlを出力できるようにする&lt;/li&gt;
&lt;li&gt;org-modeから，文献がnumberingされ文献リストも付いたwordファイルを出力できるようにする&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;org-modeで論文を書く利点&#34;&gt;org-modeで論文を書く利点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;LaTeXのややこしいコマンドを覚えなくても普通に文章を書いていけば，pdfで出力できる．&lt;/li&gt;
&lt;li&gt;latexの力を借りることで，文献の引用やリストの作成を自動化できる．&lt;/li&gt;
&lt;li&gt;必要なら，htmlとしても出力できる．&lt;/li&gt;
&lt;li&gt;どうしても必要なら，pandocの力を借りて，なんとMicrosoft Wordのファイルとしても出力できてしまう．&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;org-modeの設定-セットアップ-pdfとhtmlへの出力用&#34;&gt;org-modeの設定・セットアップ（pdfとhtmlへの出力用）&lt;/h2&gt;
&lt;p&gt;設定が最もよくまとまっているのは&lt;a href=&#34;https://texwiki.texjp.org/?Emacs%2FOrg%20mode&#34;&gt;TeX Wiki Emacs/Org mode&lt;/a&gt; 設定例のmacOSの部分である．正統派の方は，こちらを参考にしていただきたい．&lt;/p&gt;
&lt;p&gt;私は，&lt;a href=&#34;https://ctan.org/pkg/koma-script&#34;&gt;koma-script – A bundle of versatile classes and packages&lt;/a&gt; と &lt;a href=&#34;https://tufte-latex.github.io/tufte-latex/&#34;&gt;Tufte-LaTeX&lt;/a&gt; を気に入っており，ほぼこれらしか使わないので，その設定を書いておく．その前に少し情報をまとめておく．&lt;/p&gt;
&lt;h3 id=&#34;koma-script-a-bundle-of-versatile-classes-and-packages&#34;&gt;&lt;a href=&#34;https://ctan.org/pkg/koma-script&#34;&gt;koma-script – A bundle of versatile classes and packages&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;参考サイト１：&lt;a href=&#34;http://konoyonohana.blog.fc2.com/blog-category-12.html&#34;&gt;Koma-Script 入門　～初歩の初歩～&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考サイト２：&lt;a href=&#34;https://ichiro-maruta.blogspot.com/2013/03/latex.html&#34;&gt;使ってはいけない LaTeX のコマンド・パッケージ・作法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考サイト３：&lt;a href=&#34;https://qiita.com/zr%5Ftex8r/items/297154ca924749e62471&#34;&gt;LaTeX の「アレなデフォルト」 傾向と対策&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;アメリカ生まれのaritcleなどの欧文標準文書クラスはデフォルトがレターサイズで余白が広すぎてしまう．これに対して，ヨーロッパ生まれのkoma-scriptはa4がデフォルトで，余白も広すぎず，レイアウトもなんとなくオシャレ（笑）である．当然のことながら，texliveに含まれており，texliveをインストールした時点で，インストールされている．&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tufte-latex&#34;&gt;&lt;a href=&#34;https://tufte-latex.github.io/tufte-latex/&#34;&gt;Tufte-LaTeX&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;参考サイト１： &lt;a href=&#34;https://github.com/tsdye/tufte-org-mode/blob/master/README.md&#34;&gt;tufte-org-mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.edwardtufte.com/tufte/index&#34;&gt;Edward R. Tufte&lt;/a&gt;によって作られたページレイアウト．典型的には文章が左側に配置され，右側には広いマージンがありノート，文献，表，図などが配置されるスタイルである．こういうスタイルはよく見かけるものだと思うが，作者がはっきりしているとは，恥ずかしながら全く知らなかった．&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tsdye/tufte-org-mode/blob/master/README.md&#34;&gt;tufte-org-mode&lt;/a&gt;はこのtufte classをorg-modeから使えるようにした有り難いパッケージである．&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;org-bullet&#34;&gt;org-bullet&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;参考サイト１：&lt;a href=&#34;https://github.com/sabof/org-bullets&#34;&gt;https://github.com/sabof/org-bullets&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参考サイト２：&lt;a href=&#34;http://www.howardism.org/Technical/Emacs/orgmode-wordprocessor.html&#34;&gt;http://www.howardism.org/Technical/Emacs/orgmode-wordprocessor.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pdf出力とは関係ないが，ついでに触れておく．要するにorg-modeの見た目が良くなるパッケージである．星印が色付きの丸や二重丸になる．やる気に繋がるので，見た目は大事である．こんな感じになる．&lt;/p&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/org-bullet.jpg&#34; &gt;

&lt;img src=&#34;/img/org-bullet.jpg&#34; width=&#34;100%&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;init.elには以下のように&lt;a href=&#34;https://github.com/jwiegley/use-package&#34;&gt;use-package&lt;/a&gt;を用いて記述してインストール兼設定となる．もちろん，これも以前の記事（&lt;a href=&#34;../init_org&#34;&gt;Emacsの設定（その2）設定ファイル（init.el）をorg-modeで管理する&lt;/a&gt;）で説明したように，init.orgに書いたものから生成されたinit.elである．&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;use-package&lt;/span&gt; org-bullets
  &lt;span style=&#34;color:#e6db74&#34;&gt;:ensure&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;
  &lt;span style=&#34;color:#e6db74&#34;&gt;:config&lt;/span&gt;
  (add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org-mode-hook&lt;/span&gt; (lambda () (org-bullets-mode &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;org-modeのinit-dot-elの設定-pdf出力用&#34;&gt;org-modeのinit.elの設定（pdf出力用）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;前述のごとく，koma-scriptとTufte-LaTeXについて設定する．&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;何回もしつこいようだが，これも以前の記事（&lt;a href=&#34;../init_org&#34;&gt;Emacsの設定（その2）設定ファイル（init.el）をorg-modeで管理する&lt;/a&gt;）で説明したように，init.orgに書いたものから生成されたinit.elである．&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ox-latex&lt;/span&gt;)
(add-to-list &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;auto-mode-alist&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\.org$&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; org-mode))
(&lt;span style=&#34;color:#66d9ef&#34;&gt;setq&lt;/span&gt; org-latex-default-class &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bxjsarticle&amp;#34;&lt;/span&gt;)

(add-to-list &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org-latex-classes&lt;/span&gt;
             &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;koma-article&amp;#34;&lt;/span&gt;
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\documentclass{scrartcl}&amp;#34;&lt;/span&gt;
               (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\section{%s}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\section*{%s}&amp;#34;&lt;/span&gt;)
               (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\subsection{%s}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\subsection*{%s}&amp;#34;&lt;/span&gt;)
               (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\subsubsection{%s}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\subsubsection*{%s}&amp;#34;&lt;/span&gt;)
               (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\paragraph{%s}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\paragraph*{%s}&amp;#34;&lt;/span&gt;)
               (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\subparagraph{%s}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\subparagraph*{%s}&amp;#34;&lt;/span&gt;)))

(add-to-list &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org-latex-classes&lt;/span&gt;
             &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;koma-jarticle&amp;#34;&lt;/span&gt;
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\documentclass{scrartcl}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;               \\usepackage{amsmath}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;               \\usepackage{amssymb}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;               \\usepackage{xunicode}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;               \\usepackage{fixltx2e}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;               \\usepackage{zxjatype}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;               \\usepackage[hiragino-dx]{zxjafont}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;               \\usepackage{xltxtra}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;               \\usepackage{graphicx}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;               \\usepackage{longtable}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;               \\usepackage{float}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;               \\usepackage{wrapfig}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;               \\usepackage{soul}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;               \\usepackage{hyperref}&amp;#34;&lt;/span&gt;
               (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\section{%s}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\section*{%s}&amp;#34;&lt;/span&gt;)
               (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\subsection{%s}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\subsection*{%s}&amp;#34;&lt;/span&gt;)
               (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\subsubsection{%s}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\subsubsection*{%s}&amp;#34;&lt;/span&gt;)
               (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\paragraph{%s}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\paragraph*{%s}&amp;#34;&lt;/span&gt;)
               (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\subparagraph{%s}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\subparagraph*{%s}&amp;#34;&lt;/span&gt;)))

&lt;span style=&#34;color:#75715e&#34;&gt;;; tufte-handout class for writing classy handouts and papers&lt;/span&gt;
(add-to-list &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org-latex-classes&lt;/span&gt;
             &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tufte-handout&amp;#34;&lt;/span&gt;
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\documentclass[twoside,nobib]{tufte-handout}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                                 [NO-DEFAULT-PACKAGES]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                \\usepackage{zxjatype}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                \\usepackage[hiragino-dx]{zxjafont}&amp;#34;&lt;/span&gt;
               (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\section{%s}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\section*{%s}&amp;#34;&lt;/span&gt;)
               (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\subsection{%s}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\subsection*{%s}&amp;#34;&lt;/span&gt;)))
&lt;span style=&#34;color:#75715e&#34;&gt;;; tufte-book class&lt;/span&gt;
(add-to-list &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org-latex-classes&lt;/span&gt;
             &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tufte-book&amp;#34;&lt;/span&gt;
               &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\documentclass[twoside,nobib]{tufte-book}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                                [NO-DEFAULT-PACKAGES]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                 \\usepackage{zxjatype}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                 \\usepackage[hiragino-dx]{zxjafont}&amp;#34;&lt;/span&gt;
               (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\part{%s}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\part*{%s}&amp;#34;&lt;/span&gt;)
               (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\chapter{%s}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\chapter*{%s}&amp;#34;&lt;/span&gt;)
               (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\section{%s}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\section*{%s}&amp;#34;&lt;/span&gt;)
               (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\subsection{%s}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\subsection*{%s}&amp;#34;&lt;/span&gt;)
               (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\paragraph{%s}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\\paragraph*{%s}&amp;#34;&lt;/span&gt;)))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;私はxelatexを使っているので，compileは以下のように設定している．&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;setq&lt;/span&gt; org-latex-pdf-process
      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xelatex -interaction nonstopmode -output-directory %o %f&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bibtex %b&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xelatex -interaction nontopmode -output-directory %o %f&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xelatex -interaction nonstopmode -output-directory %o %f&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ここまでEmacsを設定した上で，orgで原稿を書き，C-c C-eと打てば，以下のような画面になる．なお，pandocやTufteの項は別途記事にするので，とりあえずは無視してほしい．&lt;/p&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/org-C-c-C-e.jpg&#34; &gt;

&lt;img src=&#34;/img/org-C-c-C-e.jpg&#34; width=&#34;100%&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pdfで出力したければ，さらに，l o と打つと，As PDF file and openを選択したことになり，原稿がpdfとして出力され，かつ，skimでそのpdfがオープンされる．&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同じく，htmlで出力したければ，h o と打つと，As HTML file and openを選択したことになり，ブラウザーでそのhtmlがオープンされる．&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;org-modeで論文を書く-の実例&#34;&gt;「org-modeで論文を書く」の実例&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;それでは実例を示してみる．以下のような書類を作成し，hogefuga.orgとして保存する．hoge_fuga.jpgはorg fileと同じdirectoryにあるものとする．&lt;/li&gt;
&lt;li&gt;前半の＃で始まる行が続く部分はorg-modeの設定であり，latexのこのパッケージを使うぞ，とか，org-modeのヘッダーをどの深さまで表示するかなどを決めている．詳細はググればすぐに分かるので略&amp;hellip;..(^^;;;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;LaTeX_CLASS: koma-jarticle
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;LaTeX_CLASS_OPTIONS: [12pt]
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;LATEX_HEADER: \usepackage{geometry}
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;LATEX_HEADER: \geometry{left=1in,right=1in,top=1in,bottom=1in}
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;LaTeX_HEADER: \usepackage[sort,compress,super,comma]{natbib}
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;STARTUP:  overview
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;STARTUP:  hidestars
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;OPTIONS:   H:4 num:nil toc:nil \n:nil @:t &lt;span style=&#34;color:#e6db74&#34;&gt;::t&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:t&lt;/span&gt; ^:t -:t f:t *:t TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;OPTIONS: date:nil
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;LINK_UP:
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;LINK_HOME:

&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;TITLE: hoge/fugaによる相補的な治療における高難度症例の治療と成績
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;AUTHOR: taipapa, 織田信長, 豊臣秀吉, 徳川家康
\vspace*{-1.5cm}

\hspace{2.5cm} hogefuga大学大学院 hogefuga研究科 hogefuga分野

&lt;span style=&#34;color:#a6e22e&#34;&gt;*&lt;/span&gt; 背景と目的
hogeとfugaを比較してみると&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;一方で難易度の高い症例でも他方では容易に行える場合も多い&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;．&lt;/span&gt;当施設では&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;一方に片寄ることなく&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;hogeとfugaを相補的に用いることにより合併症の減少を目指す方針をとっている&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;．&lt;/span&gt;そこで&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;，&lt;/span&gt;自験例から高難度のhogefuga症例についての方針と成績を主にhogefuga surgeonの立場から検討した&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;．&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;*&lt;/span&gt; 結果
hogefuga症例の画像である (*Fig. [[hoge_fuga]]*)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;．&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;NAME: hoge_fuga
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;caption: hoge-fuga&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;（&lt;/span&gt;重症例である&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;）&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;attr_latex: &lt;span style=&#34;color:#e6db74&#34;&gt;:float&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:width&lt;/span&gt; 3in  &lt;span style=&#34;color:#e6db74&#34;&gt;:align&lt;/span&gt; center
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;ATTR_HTML: &lt;span style=&#34;color:#e6db74&#34;&gt;:width&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;:float:&lt;/span&gt; wrap &lt;span style=&#34;color:#e6db74&#34;&gt;:align&lt;/span&gt; center
[[./hoge_fuga.jpg]]

&lt;span style=&#34;color:#a6e22e&#34;&gt;*&lt;/span&gt; 結論
hogefugaによる治療は有効である&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;．&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ついで，前述のごとく，Emacsでこの文書を開いた状態で，C-c C-e l oと打てば，以下のようなpdfがskimで開かれる．&lt;/p&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/hogefuga_text.jpg&#34; &gt;

&lt;img src=&#34;/img/hogefuga_text.jpg&#34; width=&#34;100%&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;また，C-c C-e h oと打てば，以下のようなhtmlがbrowserで開かれる．latexのコマンドが見えてしまっているのがご愛嬌だが，htmlにしか出力しないのであれば，削除すればよい．&lt;/p&gt;






&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/hogefuga_html.jpg&#34; &gt;

&lt;img src=&#34;/img/hogefuga_html.jpg&#34; width=&#34;100%&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;長くなったので，ここまでとし，文献の引用の設定は次回の記事にまとめることとする．&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>

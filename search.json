[{"authors":null,"categories":null,"content":" ようやく，ここからinit.orgの具体的な記述になる．\nCoding systemの設定  まずは，coding systemの設定，つまり，日本語の設定，日本語フォントの設定から init.orgに以下のように書き込む\n​* Coding System Environment ** 言語を日本語にする #+BEGIN_SRC lisp (set-language-environment 'Japanese) #+END_SRC ** 極力UTF-8とする #+BEGIN_SRC lisp (prefer-coding-system 'utf-8) #+END_SRC ** 日本語フォントをヒラギノにする ​ - 日本語のサイズを指定しないと動的にサイズを変えられるようになる ​ - 奥村先生のサイト参照 https://oku.edu.mie-u.ac.jp/~okumura/macosx/ #+BEGIN_SRC lisp (when (or (eq window-system 'mac) (eq window-system 'ns)) (set-face-attribute 'default nil :family \u0026quot;Menlo\u0026quot; :height 180) ;; 18pt (set-fontset-font nil 'japanese-jisx0208 (font-spec :family \u0026quot;Hiragino Kaku Gothic ProN\u0026quot;)) (setq face-font-rescale-alist '((\u0026quot;.*Hiragino Kaku Gothic ProN.*\u0026quot; . 1.1)))) #+END_SRC  これがEmacs起動時にorg-babel-load-fileにより変換されて下記のようなinit.elとなる．\n(set-language-environment 'Japanese) (prefer-coding-system 'utf-8) (when (or (eq window-system 'mac) (eq window-system 'ns)) (set-face-attribute 'default nil :family \u0026quot;Menlo\u0026quot; :height 180) ;; 18pt (set-fontset-font nil 'japanese-jisx0208 (font-spec :family \u0026quot;Hiragino Kaku Gothic ProN\u0026quot;)) (setq face-font-rescale-alist '((\u0026quot;.*Hiragino Kaku Gothic ProN.*\u0026quot; . 1.1))))  つまり，org-modeで書いたinit.orgでの解説はすべて除かれて，lispのみのcodeになってinit.elが生成される．\n この利点は，init.elの説明が実に書きやすい点にある（実際にはinit.orgに書くわけだが．．．）．org-modeはアウトライナーなので，階層構造も自由自在である．整理もしやすいし，後で順番を変えるのもCommand + arrow keyを使えば実に簡単である．\n  Inline-patchの設定  ついで，最も重要なinline-patchの設定 参考：http://keisanbutsuriya.hateblo.jp/entry/2016/04/10/115945 参考：http://keisanbutsuriya.hateblo.jp/entry/2016/04/10/115945 参考：http://suzuki.tdiary.net/20160103.html init.orgに以下のように書き込む．\n​* inline-patch on macosx ** ミニバッファ入力時に自動的に英語入力モードにする ​ - 参考：http://keisanbutsuriya.hateblo.jp/entry/2016/04/10/115945 #+BEGIN_SRC lisp (when (functionp 'mac-auto-ascii-mode) ;; ミニバッファに入力時、自動的に英語モード (mac-auto-ascii-mode 1)) #+END_SRC ** 日本語か英語かで，カーソルの色を変える． ​ - 参考１：http://keisanbutsuriya.hateblo.jp/entry/2016/04/10/115945 ​ - 参考２：http://suzuki.tdiary.net/20160103.html #+BEGIN_SRC lisp (when (fboundp 'mac-input-source) (defun my-mac-selected-keyboard-input-source-chage-function () (let ((mac-input-source (mac-input-source))) (set-cursor-color ; (if (string-match \u0026quot;com.apple.inputmethod.Kotoeri.Roman\u0026quot; mac-input-source) (if (string-match \u0026quot;com.google.inputmethod.Japanese.Roman\u0026quot; mac-input-source) \u0026quot;#91C3FF\u0026quot; \u0026quot;#FF9300\u0026quot;)))) (add-hook 'mac-selected-keyboard-input-source-change-hook 'my-mac-selected-keyboard-input-source-chage-function)) #+END_SRC  これがEmacsの起動時に，org-babel-load-fileによって，下記のようにcodeだけ抜き出されて，init.elに書き込まれる．\n(when (functionp 'mac-auto-ascii-mode) ;; ミニバッファに入力時、自動的に英語モード (mac-auto-ascii-mode 1)) (when (fboundp 'mac-input-source) (defun my-mac-selected-keyboard-input-source-chage-function () (let ((mac-input-source (mac-input-source))) (set-cursor-color ; (if (string-match \u0026quot;com.apple.inputmethod.Kotoeri.Roman\u0026quot; mac-input-source) (if (string-match \u0026quot;com.google.inputmethod.Japanese.Roman\u0026quot; mac-input-source) \u0026quot;#91C3FF\u0026quot; \u0026quot;#FF9300\u0026quot;)))) (add-hook 'mac-selected-keyboard-input-source-change-hook 'my-mac-selected-keyboard-input-source-chage-function))  これで日本語入力中であっても，M-xなどでミニバッファ入力時に自動的に英語入力モードになってくれる．\n ついでに行った日本語か英語かでカーソルの色が変わる設定はわりに有用だが，ときに色が変わらないことあり．\n  ","date":1534518000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1534662882,"objectID":"db67e226f1d0ecf2ed24d284332c2d91","permalink":"/post/japanese_setup/","publishdate":"2018-08-18T00:00:00+09:00","relpermalink":"/post/japanese_setup/","section":"post","summary":"ようやく，ここからinit.orgの具体的な記述になる． Coding systemの設定 まずは，coding systemの設定，つまり，日本語の設定，","tags":["emacs","prelude","init-el"],"title":"Emacsの設定（その3）ようやくinit.orgの記述: 日本語の設定，inline-patchの設定など","type":"post"},{"authors":null,"categories":null,"content":" 自分のinit.elを見てると嫌になってくる．なんとかしようと弄り回すが，結局，訳わからんコードが山のように残ったまま．これをなんとかしようと，以前から気になっていたorg-modeでinit.elを管理するという方法を試してみた．まず，参考にしたサイトを最初にまとめておくので，そちらを見たほうが良いかもしれない．\n参考サイト  俺、ちゃんと全部管理してます（org-modeでinit.elを管理する） babel-loader:org-mode で init.el を管理する方法 平衡点(2011-12-13) ORG-Babel + init.el = ?? | くらいまーず　はい Prelude init.el \u0026amp; org-babel  Preludeを使いながら，init.orgから個人用のinit.elを自動作成させてEmacsを設定する方法 基本方針  個人用の設定内容は，~/.emacs.d/personal/init.orgに書き込む． 起動時にEmacsはinit.orgを解釈できないので，init.elにはそれを解釈するように書き込む． 具体的には，init.elで，(require \u0026lsquo;org)した後にorg-babel-load-fileでinit.orgを読み込む． しかし，Preludeを導入しているので，そのまま~/.emacs.dにinit.elを書き込むわけにはいかず，少し工夫する．  Preludeの導入 前回のポスト（Emacsの設定（その1）Preludeの導入）を参考　emac-init.elの作成  ~/.emacs.d/personal/emacs-init.elというファイルを作成し，下記のように書き込む  (require 'org) (defvar my-config-dir (concat user-emacs-directory \u0026quot;personal/\u0026quot;)) (org-babel-load-file (expand-file-name \u0026quot;init.org\u0026quot; my-config-dir))   工夫と言っても， init.elの名前のままではinit.orgからinit.elが生成されるときに衝突してしまう ので，違う名前（emacs-init.el）にしていることと，init.orgを~/.emacs.d/personal/に置くようにしているだけ． これでEmacsを起動すると，init.org内のcode blockだけを抜き出したinit.elが同じdirectory (personal)に作成される．  init.orgの作成  これでいよいよ肝心のinit.orgの作成を行う org-modeについては，今更説明不要であろう．とにかくすごいやつ．超高機能アウトラインメジャーモード．文書作成，このブログ作成など殆どのことをこれでやっている． 具体的な内容は次回以降に記述予定だが，code blockの挿入だけは特筆しておく．  Code blockの挿入  俺、ちゃんと全部管理してます（org-modeでinit.elを管理する）で指摘されているとおり，とにかく便利．以下はほとんどそのままコピペしたような記述である． org-modeで以下のようにする．（後述する設定が必要）\n\u0026lt;l （ここで\u0026lt;TAB\u0026gt;すると．．．） 以下のように展開される #+begin_src emacs-lisp #+end_src   Codeの記述  上記の#+begin_src emacs-lispと#+end_srcの間にemacs-lispで設定内容を書く．ここからが便利にできているところ． code-blockの中にいるときに\n C-c ;とする 当該のcode blockだけのバッファが表示される（下図の下のバッファ）\n  この中はemacs-lisp modeでsyntaxも普通に効くので，普通にコードを書く．もちろん，括弧の対応もハイライトで表示される．\n C-c nとする\n すると，インデントも綺麗に整えてくれる．\n 満足したら，C-c ;で元のバッファに戻る．整形は綺麗なまま反映される．素晴らしい！\n  具体的なinit.orgの内容は次回のポスト以降に記述予定\n  ","date":1534431600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1534662882,"objectID":"b06af86de08d524aca096f3123538f39","permalink":"/post/init_org/","publishdate":"2018-08-17T00:00:00+09:00","relpermalink":"/post/init_org/","section":"post","summary":"自分のinit.elを見てると嫌になってくる．なんとかしようと弄り回すが，結局，訳わからんコードが山のように残ったまま．これをなんとか","tags":["emacs","init-org","init-el"],"title":"Emacsの設定（その2）設定ファイル（init.el）をorg-modeで管理する","type":"post"},{"authors":null,"categories":null,"content":" 昔はいろいろイチからinit.elを設定したものだけど，今は最初からほぼ全部やってくれる設定集がある．\nPreludeとは  Emacs初期設定集の一種．他にもいろいろあるようだが，これしか使ったことがないので．．． Prelude Githubはこちら  Preludeのインストール  上記のGithubのFast Forwardに書いてあるように，macOSで既にgitとcurlとEmacsをインストールしていれば，下記のコマンドを打てば，Preludeがインストールされる．念のために，古い.emacs.dはどこかに退避させておく（名前を変えて保存されるようになって入るが心配性なもんで）．\n$ curl -L https://git.io/epre | sh  インストール終了後にEmacsを再起動すると，勝手にもの凄い勢いでどんどん各種パッケージをダウンロードしてインストールしてくれる．auctexなどもインストールされるので，LaTeXも使えるようになる．素晴らしい！\n prelude-modules.elを見て必要なmodulesがロードされるようにコメントアウトを外す．\n(require 'prelude-helm) ;; Interface for narrowing and search (require 'prelude-helm-everywhere) ;; Enable Helm everywhere  helmにすっかり慣らされてしまったのでこのあたりは外している．\n preludeのdefaultの設定は，ほぼ満足すべきものだが，ひとつだけ，prelude-auto-saveが邪魔である．これは，他のbufferに移動したり，他のアプリを使用したりするたびに自動で保存される機能であるが，非常に鬱陶しい．M-x customize からprelude-auto-saveを検索し，offにする．custom.elに書き込まれる．\n 個人の設定は，~/.emacs.d/personal/init.elに書き込む．これは，org-modeを使って設定するのが良い．まずorg-modeについての記事を書いたあとにinit.orgについて書く予定．\n  ","date":1534258800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1534662881,"objectID":"75ec383bbee930d55f0c6255e6a3fc1b","permalink":"/post/prelude_install/","publishdate":"2018-08-15T00:00:00+09:00","relpermalink":"/post/prelude_install/","section":"post","summary":"昔はいろいろイチからinit.elを設定したものだけど，今は最初からほぼ全部やってくれる設定集がある． Preludeとは Emacs初","tags":["emacs","prelude"],"title":"Emacsの設定（その1）Preludeの導入","type":"post"},{"authors":null,"categories":null,"content":"なにはともあれ，まずはEmacsのインストールから．様々な方法があるが，Mac userなので，ここではHomebrewを使ってサクッとインストール．Homebrew自体のインストールはそちらのサイトを参照．\nEmacsで日本語を書いてると，M-xしたときに面倒なことになるので，Imput Method Editor (IME)用のパッチを当てる．既にパッチの当たっているYAMAMOTO Mitsuharu版のMac Port用のemacs-macがよい．railwaycatさんがHomebrewでインストールできるようにしてくれているので，これを使わせていただく（Emacs Mac Port）．ありがたい．\n$ brew tap railwaycat/emacsmacport $ brew install emacs-mac --with-modern-icon --with-imagemagick $ ln -s /usr/local/opt/emacs-mac/Emacs.app /Applications   \u0026ndash;with-modern-iconを指定すると、新しいアイコンになる。    なお，他のoptionは以下のように打てば分かる．  $ brew tap railwaycat/emacsmacport $ brew info emacs-mac  ","date":1534172400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1534662881,"objectID":"f69b5b841ae28423793b792cc9846d14","permalink":"/post/emacs_install/","publishdate":"2018-08-14T00:00:00+09:00","relpermalink":"/post/emacs_install/","section":"post","summary":"なにはともあれ，まずはEmacsのインストールから．様々な方法があるが，Mac userなので，ここではHomebrewを使ってサク","tags":["emacs","homebrew"],"title":"Emacsのインストール","type":"post"},{"authors":null,"categories":null,"content":"\u0026hellip;\n","date":1530111600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1530111600,"objectID":"18d05a63a1c8d7ed973cc51838494e41","permalink":"/privacy/","publishdate":"2018-06-28T00:00:00+09:00","relpermalink":"/privacy/","section":"","summary":"\u0026hellip;","tags":null,"title":"Privacy Policy","type":"page"}]
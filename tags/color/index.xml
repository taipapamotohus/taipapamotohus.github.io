<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>color | A perfect autumn day</title>
    <link>/tags/color/</link>
      <atom:link href="/tags/color/index.xml" rel="self" type="application/rss+xml" />
    <description>color</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2022</copyright><lastBuildDate>Thu, 11 Jul 2019 00:00:00 +0900</lastBuildDate>
    <image>
      <url>/img/icon-192.png</url>
      <title>color</title>
      <link>/tags/color/</link>
    </image>
    
    <item>
      <title>mojaveのライブ変換で快適日本語入力（カーソルの色も日英で変わるように設定）</title>
      <link>/post/live/</link>
      <pubDate>Thu, 11 Jul 2019 00:00:00 +0900</pubDate>
      <guid>/post/live/</guid>
      <description>&lt;p&gt;最初にmacosにライブ変換が登場した時に使用してみて，これは駄目だとすぐにGoogle inputmethodに戻してしまった．今年の5月にmojaveにupgradeしたのち，ある日，ふと思い立って，ライブ変換を試してみたところ，ほとんどストレスを感じることなくスラスラと入力ができた．ほとんど変換のためにスペースキーを叩く必要がないことに驚いた．予測の精度が登場時よりはるかに改良されているのであろう．エンドユーザーにはありがたいことである．早速乗り換えてしまった．&lt;/p&gt;
&lt;div class=&#34;ox-hugo-toc toc&#34;&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div class=&#34;heading&#34;&gt;Table of Contents&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#how-to-set-up&#34;&gt;How to set up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#shortcut&#34;&gt;Shortcut&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;!--endtoc--&gt;
&lt;h2 id=&#34;how-to-set-up&#34;&gt;How to set up&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;まず画面トップの右端の方の日本語入力のライブ変換にチェックを入れてオンにする．&lt;/li&gt;
&lt;li&gt;ついで，Emacsのカーソルの色の設定をする．これは以前の記事（&lt;a href=&#34;../japanese_setup&#34;&gt;Emacsの設定（その3）ようやくinit.orgの記述: 日本語の設定，inline-patchの設定など&lt;/a&gt;）の設定をほんの少し変えるだけのことである．comment outしていた部分を外して，google inputmethodの方をcomment outする．具体的には，init.orgに以下のように書き込めば良い．&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;BEGIN_SRC emacs-lisp
(when (&lt;span style=&#34;color:#a6e22e&#34;&gt;fboundp&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mac-input-source&lt;/span&gt;)
  (defun my-mac-selected-keyboard-input-source-chage-function ()
    (&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; ((mac-input-source (mac-input-source)))
      (set-cursor-color
       (&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (string-match &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;com.apple.inputmethod.Kotoeri.Roman&amp;#34;&lt;/span&gt; mac-input-source)
           &lt;span style=&#34;color:#75715e&#34;&gt;;; (if (string-match &amp;#34;com.google.inputmethod.Japanese.Roman&amp;#34; mac-input-source)&lt;/span&gt;
           &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#91C3FF&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#FF9300&amp;#34;&lt;/span&gt;))))
  (add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mac-selected-keyboard-input-source-change-hook&lt;/span&gt;
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;my-mac-selected-keyboard-input-source-chage-function&lt;/span&gt;))
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;END_SRC
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これでEmacsでライブ変換を使用している際に，日本語入力の時は赤色のカーソル，英語入力の時は青色のカーソルになる．&lt;/p&gt;
&lt;h2 id=&#34;shortcut&#34;&gt;Shortcut&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;参考：&lt;a href=&#34;https://qiita.com/YumaInaura/items/8c74cdf32ad2f5ed57fa&#34;&gt;#Mac のライブ変換で入力をひらがなのままで確定させる ( Control + J )&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;「Control」＋「J」  →   ひらがなに変換&lt;/li&gt;
&lt;li&gt;「Control」＋「K」  →   カタカナに変換&lt;/li&gt;
&lt;li&gt;「Control」＋「L」  →   全角英字に変換&lt;/li&gt;
&lt;li&gt;「Control」＋「;（セミコロン）」  →   半角英字に変換&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;私のところでは何故か参考サイトと異なり，セミコロンで半角カタカナではなく半角英字に変換される．半角カタカナなんか使わないからいいけど．．．&lt;/p&gt;
&lt;p&gt;J, K, L, ; はキーボード上の位置が一直線であり，かつ，左から順番になっているので，指に優しい．&lt;/p&gt;
&lt;p&gt;mojaveのライブ変換，とにかく一度使ってみることをお勧めする．&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emacsのorg-modeで論文を書く（その5：htmlへのexportの際のフォントの色の変更，ハイライトなど）（2018年12月19日追記）（2020年1月12日追記）</title>
      <link>/post/html_export/</link>
      <pubDate>Mon, 10 Dec 2018 00:00:00 +0900</pubDate>
      <guid>/post/html_export/</guid>
      <description>&lt;p&gt;学会発表や論文作成にあたっては，当然のことながら，その分野の他の研究者の論文を読んでまとめるなどの作業を行う．そこで，論文の要旨などをorg-modeにざっとまとめておくと，pdfにもhtmlにもtextにもexport出来て便利である．pdfは印刷に向いているが，htmlは多くの論文をいっぺんに見るのに向いており，また，compileの時間もpdfより圧倒的に速い．また，色を変えたり，ハイライトしたりするのもhtmlなら容易である．そこで，今回は，org-modeからhtmlへexportする際の有用な小技について書いてみたい．&lt;/p&gt;
&lt;h2 id=&#34;org-macros&#34;&gt;&lt;a href=&#34;https://github.com/fniessen/org-macros&#34;&gt;Org Macros&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;フォントの色を変更する方法はいろいろあるが，ハイライトや背景の色の変更までできるこの &lt;a href=&#34;https://github.com/fniessen/org-macros&#34;&gt;Org Macros&lt;/a&gt;が一番便利である．内容は，org-modeの便利なマクロ集である．リンク先からダウンロードして，適当なところに保存し，解凍しておく．ここでは，/Users/taipapa/hoge/fuga/org-macros.setupに置くことにする．使い方は簡単で上記のwebsiteに書いてあるとおり，各org fileの先頭に以下のように記述してorg-macros.setupの場所を教えてやれば良い．&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;INCLUDE: /Users/taipapa/hoge/fuga/org-macros.setup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これだけである．&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;del&gt;注意事項としては，このブログはox-hugoで書いているが，ox-hugoの場合は文書の先頭に上記を書いても効かない．各ポストのpropertyのあとに書いておけば効く．各ポストごとに設定するようになっているらしい．．．．．（全国15人？ぐらいの人にしか意味のない注意書きである）&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;上記に関しては-ox-hugoの作者であるkaushal-modi氏から以下のような指摘を頂いた-12月19日追記&#34;&gt;上記に関しては，ox-hugoの作者であるKaushal Modi氏から以下のような指摘を頂いた．（12月19日追記）&lt;/h3&gt;
&lt;div class=&#34;panel&#34;&gt;
  &lt;div&gt;&lt;/div&gt;
&lt;p&gt;Can you try using #+setupfile instead of #+include? As an example, here is my blog Org source that I export using ox-hugo ( &lt;a href=&#34;https://gitlab.com/kaushalm&#34;&gt;https://gitlab.com/kaushalm&lt;/a&gt;&amp;hellip; ), and here is the setup file tha t I &amp;ldquo;include&amp;rdquo; using the more appropriate #+setupfile ( &lt;a href=&#34;https://gitlab.com/kaushalm&#34;&gt;https://gitlab.com/kaushalm&lt;/a&gt;&amp;hellip; ).&lt;/p&gt;
&lt;p&gt;As you see, I use a lot of Org macros, and they all work in my &amp;ldquo;one post per subtree&amp;rdquo; flow.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;ということで，ox-hugoの場合は，以下のように文書の先頭に書いておけば，one-post per subtreeの投稿全てにorg-macroが効くことを確認した．&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;setupfile: /Users/taipapa/hoge/fuga/org-macros.setup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;こんなブログにまで目を通してコメントしてくれるのには驚いた．親切な方である．日本語が読める人なのかとも思ったが，どうやらGoogleの翻訳を利用されているようだ．このページだと，&lt;a href=&#34;https://translate.google.com/translate?depth=1&amp;amp;sl=auto&amp;amp;sp=nmt4&amp;amp;tl=en&amp;amp;u=https://taipapamotohus.com/post/html%5Fexport/&amp;amp;xid=17259,1500004,15700019,15700124,15700149,15700186,15700190,15700201,15700237,15700242#comment-4245099680&#34;&gt;A Perfect Autumn Day&lt;/a&gt;に行くと翻訳版を見ることができる．その翻訳レベルにも今更ながら感心した．．．&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;残念ながら，LaTeXへのexportでは，この方法による色の変更などは（現在のところ）効かない．&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;いくつか使い方の例をあげておく&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;{{{color(red, 赤くなるかな&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;？&lt;/span&gt;)}}}
*{{{color(blue, ボールドで赤くなるかな&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;？&lt;/span&gt;)}}}*
{{{highlight(yellow, 黄色にハイライトされるかな&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;？&lt;/span&gt;)}}}
*{{{highlight(yellow, 黄色にハイライトされて文字はボールドになるかな&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;？&lt;/span&gt;)}}}*
{{{bgcolor(cyan, 背景がシアンになるかな&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;？&lt;/span&gt;)}}}
*{{{bgcolor(cyan, 背景がシアンになって文字はボールドになるかな&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;？&lt;/span&gt;)}}}*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これが以下のように表示される．&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span style=&#34;color: red&#34;&gt; 赤くなるかな？&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;span style=&#34;color: red&#34;&gt; ボールドで赤くなるかな？&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;background-color: yellow;&#34;&gt; 黄色にハイライトされるかな？&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;span style=&#34;background-color: yellow;&#34;&gt; 黄色にハイライトされて文字はボールドになるかな？&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;div style=&#34;background-color: cyan;&#34;&gt; 背景がシアンになるかな？&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;div style=&#34;background-color: cyan;&#34;&gt; 背景がシアンになって文字はボールドになるかな？&lt;/div&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上記以外にも多くのマクロが含まれており，そちらも人によっては有用かもしれない．少しだけ例をあげておく．以下はパネルの例．&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;{{{begin_panel}}} Panel example This is a formatted &lt;span style=&#34;color:#66d9ef&#34;&gt;block&lt;/span&gt; of text&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;…&lt;/span&gt; {{{end_panel}}}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これが，&lt;/p&gt;
&lt;div class=&#34;panel&#34;&gt;&lt;p&gt; Panel example This is a formatted block of text… &lt;/p&gt;&lt;/div&gt;
となる．マニュアルでは以下の使い方を薦めている．
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;begin_panel
*Panel example* \\
This is a formatted &lt;span style=&#34;color:#66d9ef&#34;&gt;block&lt;/span&gt; of text...
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;end_panel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;panel&#34;&gt;
  &lt;div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Panel example&lt;/strong&gt; &lt;br /&gt;
This is a formatted block of text&amp;hellip;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;なお，org-modeのマクロ自体に関しては，org-modeのマニュアルの &lt;strong&gt;12.5 Macro replacement&lt;/strong&gt; を参考にしていただきたい．&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;strong&gt;2020年1月12日　Hugoを使用している人のための追記&lt;/strong&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;2019年の年末にMacBook Pro 16 inch (Catalina)に買い替えた時，Hugoもv.０.61にupgradeした．その際に，HugoのMarkdown用のdefault libraryがGoldmarkに変更になっていることに気がついていなかった．そのためにこのページのフォントの色の変更が働かなくなっていた．数日前に気がついたので，修正した．詳細は以下のサイトを参考．&lt;/p&gt;
&lt;p&gt;参考サイト1：&lt;a href=&#34;https://gohugo.io/news/0.60.0-relnotes/&#34;&gt;Goldmark – CommonMark compliant, GitHub flavored, fast and flexible – is the new default library for Markdown in Hugo.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;参考サイト2：&lt;a href=&#34;https://discourse.gohugo.io/t/ox-hugo-go-org/21254/7&#34;&gt;Just wonder if the migration to Goldmark is going to be smooth ?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上記のサイトには，「マークダウンファイルにinline HTMLがたくさんあるのなら，unsafe modeを有効にしないといけないかもね」とあるので，config/default/config.tomlの最後に，&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-nil&#34; data-lang=&#34;nil&#34;&gt;[markup]
  [markup.goldmark]
    [markup.goldmark.renderer]
      unsafe = true
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;を追加した．これで，Markdownがうまく働くようになり，再びフォントの色も変更されるようになった．&lt;/p&gt;
&lt;h2 id=&#34;exporting-org-mode-to-html-in-place-coloring&#34;&gt;&lt;a href=&#34;https://stackoverflow.com/questions/21340380/exporting-org-mode-to-html-in-place-coloring&#34;&gt;Exporting org-mode to HTML: In-place coloring&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;フォントの色を変える別の方法である．リンク先にある通り，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;この文章は， *@@html:&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;font&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;color &lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;&amp;gt;@@青のボールド@@html:&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;font&lt;/span&gt;&amp;gt;@@*になって欲しい！
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これが以下のように表示される．&lt;br /&gt;
この文章は， &lt;strong&gt;&lt;font color = &#34;red&#34;&gt;赤のボールド&lt;/font&gt;&lt;/strong&gt; になって欲しい！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;org-modeのマニュアルの &lt;strong&gt;12.9.5 Quoting HTML tags&lt;/strong&gt; も参考のこと&lt;/p&gt;
&lt;p&gt;こちらは設定を必要としないが，やはり，最初に説明したマクロの方がいろいろ出来て便利である．&lt;/p&gt;
&lt;p&gt;次回は，htmlをexportする際のCSSについてまとめてみたい．&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>

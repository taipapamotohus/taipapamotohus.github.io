<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pdf | A perfect autumn day</title>
    <link>/tags/pdf/</link>
      <atom:link href="/tags/pdf/index.xml" rel="self" type="application/rss+xml" />
    <description>pdf</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2019</copyright><lastBuildDate>Wed, 24 Jul 2019 00:00:00 +0900</lastBuildDate>
    <image>
      <url>/img/icon-192.png</url>
      <title>pdf</title>
      <link>/tags/pdf/</link>
    </image>
    
    <item>
      <title>Full text search of PDF archives with hyperestraier on maos (mojave) — Hyper Estraierでpdfの全文検索を行う</title>
      <link>/post/fulltextsearch/</link>
      <pubDate>Wed, 24 Jul 2019 00:00:00 +0900</pubDate>
      <guid>/post/fulltextsearch/</guid>
      <description>&lt;p&gt;論文というものはすぐにたまる．読みもしないのにどんどんたまる．21世紀に入った頃は論文のプリントアウトの山ができて定期的に捨てたりしていたのだが，それも今は昔，現在はpdfの時代であり，かなり前からpdfで読んで，注釈など書き込んだりするようになった．しかし，どんどんたまるのは昔以上である．何しろ取るスペースはディスクの容量だけで，物理空間を占拠するわけではないから，いくらでも気兼ねなくため込める．ため込んだ論文数が数千を越えるあたりで，ふと思うわけである．「これを全て読むのは不可能としても，全文検索ができたら便利だろうなぁ．．．」&lt;/p&gt;

&lt;p&gt;という訳で，今回は，hyperestraierを使ってため込んだpdfの全文検索をできるようにしようという話である．&lt;/p&gt;

&lt;p&gt;hyperestraierをインストールし，Apacheをセットアップして，pdf文書のインデックスを作成し，これをブラウザで検索できるようにするという流れでまとめていく．&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;セットアップは結構面倒だが，非常に便利で，オススメである！&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;なお，以下の手順は，MacBook Pro (15-inch, Late 2016) Mojave 10.14.6，および，iMac 2012 Mojave 10.14.6 の両方で確認済みである．&lt;/p&gt;

&lt;div class=&#34;ox-hugo-toc toc&#34;&gt;
&lt;div&gt;&lt;/div&gt;

&lt;div class=&#34;heading&#34;&gt;Table of Contents&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#references&#34;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#hyper-estraier&#34;&gt;Hyper Estraier&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#install&#34;&gt;Install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pdftotext&#34;&gt;pdftotext&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ユーザー用のウェブディレクトリの作成&#34;&gt;ユーザー用のウェブディレクトリの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#全文検索用のディレクトリの作成&#34;&gt;全文検索用のディレクトリの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#全文検索用のindexの作成&#34;&gt;全文検索用のindexの作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#indexの更新&#34;&gt;indexの更新&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#検索のテスト&#34;&gt;検索のテスト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#apache-set-up&#34;&gt;Apache set up&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#cgi-を許可するように-apache-を設定する&#34;&gt;CGI を許可するように Apache を設定する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#apacheの起動-再起動&#34;&gt;Apacheの起動，再起動&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cgiが動くかどうかのテスト&#34;&gt;CGIが動くかどうかのテスト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#documentroot&#34;&gt;DocumentRoot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ユーザ毎のウェブディレクトリ&#34;&gt;ユーザ毎のウェブディレクトリ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#hyperestraier付属の全文検索用cgi-scriptのset-up&#34;&gt;Hyperestraier付属の全文検索用CGI scriptのset up&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/div&gt;
&lt;!--endtoc--&gt;&lt;/p&gt;

&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://skalldan.wordpress.com/2011/06/28/hyper-estraier-で仏典探索/&#34; target=&#34;_blank&#34;&gt;Hyper Estraier で仏典探索&lt;/a&gt;     Amrtaさんのものすごく役に立つサイト&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://skalldan.wordpress.com/2011/07/01/hyper-estraier-で-pdf-文書管理/&#34; target=&#34;_blank&#34;&gt;Hyper Estraier で PDF 管理&lt;/a&gt;    これまた，Amrtaさんの物凄く役に立つサイト．以上の2つを読めば，このサイトを見る必要はないような．．．(^^;;;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;sudoしてrootになるのはイヤ，普通のユーザーとしてapacheを使ってブラウザで全文検索をしたいという人は，この先を読むと参考になるかもしれない．&lt;/p&gt;

&lt;h2 id=&#34;hyper-estraier&#34;&gt;Hyper Estraier&lt;/h2&gt;

&lt;p&gt;今回用いるのは&lt;a href=&#34;https://fallabs.com/hyperestraier/index.ja.html&#34; target=&#34;_blank&#34;&gt;Hyper Estraier&lt;/a&gt;という全文検索システムである．これがどんなものかはリンク先の文書を読んでもらうとして，早速インストールである．&lt;/p&gt;

&lt;h3 id=&#34;install&#34;&gt;Install&lt;/h3&gt;

&lt;p&gt;homebrewを使用すれば一発である．qdbmなどの依存関係も全部面倒を見てくれるので楽である．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ brew install hyperestraier
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;インストールされたものを見るとこうなっている．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ brew info hyperestraier

hyperestraier: stable 1.4.13 (bottled)
Full-text search system for communities
https://fallabs.com/hyperestraier/
/usr/local/Cellar/hyperestraier/1.4.13 (278 files, 3.1MB) *
Built from source on 2016-12-24 at 22:34:54 with: --with-mecab
From: https://github.com/Homebrew/homebrew-core/blob/master/Formula/hyperestraier.rb
==&amp;gt; Dependencies
Required: qdbm
==&amp;gt; Analytics
install: 3 (30 days), 16 (90 days), 64 (365 days)
install_on_request: 3 (30 days), 16 (90 days), 64 (365 days)
build_error: 0 (30 days)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;pdfのindexを作成する際に，hyperestraierに含まれているestfxpdftohtmlというフィルタでPDFのファイルをHTML形式に変換する．しかし，このフィルタは/usr/local/bin/などには入ってくれないので，brewによりインストールされた場所を探して，pathの通るところにsymbolic linkを張っておく．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ mdfind -name filter | grep hyperestraier
/usr/local/Cellar/hyperestraier/1.4.13/share/hyperestraier/filter

$ ls -al /usr/local/Cellar/hyperestraier/1.4.13/share/hyperestraier/filter
total 48
drwxr-xr-x   8 kohkichi  admin   256 Feb 16  2017 ./
drwxr-xr-x  19 kohkichi  admin   608 Dec 24  2016 ../
-rwxr-xr-x   1 kohkichi  admin  1118 Dec 24  2016 estfxasis*
-rwxr-xr-x   1 kohkichi  admin  1063 Dec 24  2016 estfxmantotxt*
-rwxr-xr-x   1 kohkichi  admin  1263 Dec 24  2016 estfxmsotohtml*
-rwxr-xr-x   1 kohkichi  admin  1016 Dec 24  2016 estfxpdftohtml*
-rwxr-xr-x   1 kohkichi  admin  1007 Dec 24  2016 estfxxdwtotxt*
-rwxr-xr-x   1 kohkichi  admin  1057 Dec 24  2016 estwnetxpnd*

$ ln -s /usr/local/Cellar/hyperestraier/1.4.13/share/hyperestraier/filter/* /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;pdftotext&#34;&gt;pdftotext&lt;/h3&gt;

&lt;p&gt;上述のestfxpdftohtmlであるが，内部でpdftotextを使用している．そして，厄介なことに，このpdftotextはxpdfとpopplerの両方に含まれている．しかも，xpdfに含まれているpdftotextには &lt;strong&gt;-htmlmeta&lt;/strong&gt; optionがないのである．つまり， &lt;strong&gt;xpdfに含まれているpdftotextを使用するとpdf文書のindexができない&lt;/strong&gt; ということになる．実際にそれぞれのversionを見てみると，&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;lt;&amp;lt;xpdf&amp;gt;&amp;gt;
$ pdftotext -h
pdftotext version 4.01.01
Copyright 1996-2019 Glyph &amp;amp; Cog, LLC
..........

&amp;lt;&amp;lt;poppler&amp;gt;&amp;gt;
$ pdftotext -h
pdftotext version 0.77.0
Copyright 2005-2019 The Poppler Developers - http://poppler.freedesktop.org
Copyright 1996-2011 Glyph &amp;amp; Cog, LLC
..........
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;このように，全く異なったものになっているが，どうやら，xpdfのものの方が古いらしい．もし，xpdfをすでに入れている場合は，popplerをインストールしようとすると，&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ brew install poppler

Error: Cannot install poppler because conflicting formulae are installed.
xpdf: because poppler, pdftohtml, pdf2image, and xpdf install conflicting executables

Please `brew unlink xpdf` before continuing.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と怒られるので，言われる通りに brew unlink xpdf してから，再度，brew install popplerを行えば良い．これで，popplerの方のpdftotextが使われるようになって，ちゃんとindexができるようになる．私は2台あるMacの片方でだけ何故かindexが作成できないので，原因を調べているうちにこのことに気がついたが，ネットで他に触れている記事が見当たらないので，ここにまとめておく．&lt;/p&gt;

&lt;p&gt;また，このようにしてxpdfとpopplerをインストールしていると，&lt;a href=&#34;../pdf-tools/#追記-2019年7月17日&#34;&gt; Emacsでpdfを読む (pdf-tools) (2019.07.17追記)&lt;/a&gt;に書いたように，pdf-toolをコンパイルする際に「libffiがどこにあるか分からん」というようなエラーメッセージが出ることがある．その際の対処法は，&lt;a href=&#34;../pdf-tools/#追記-2019年7月17日&#34;&gt; Emacsでpdfを読む (pdf-tools) (2019.07.17追記)&lt;/a&gt;に書いたとおりである．&lt;/p&gt;

&lt;h3 id=&#34;ユーザー用のウェブディレクトリの作成&#34;&gt;ユーザー用のウェブディレクトリの作成&lt;/h3&gt;

&lt;p&gt;まず，Apacheを用いてブラウザで検索できるように（これについては後述），自分のhome directoryにSitesというdirectoryを作成する．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd ~
$ mkdir Sites
$ cd Sites
$ pwd
/Users/taipapa/Sites
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Apacheの設定のところで述べるが，このSitesというディレクトリにウェブサイトを構築できるように設定し，WWW ブラウザで全文検索できるようにする．&lt;/p&gt;

&lt;h3 id=&#34;全文検索用のディレクトリの作成&#34;&gt;全文検索用のディレクトリの作成&lt;/h3&gt;

&lt;p&gt;Sites ディレクトリの中に全文検索用のディレクトリを作成する．ここではpdfファイルの全文検索を行うので，pdfという名前にした．さらに，pdf ディレクトリの中に全文検索の対象となるpdfを集約するためのPDFsというディレクトリを作成する．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd ~/Sites
$ mkdir pdf
$ cd pdf
$ mkdir PDFs
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;pdfsディレクトリへのpdfの集約&#34;&gt;PDFsディレクトリへのpdfの集約&lt;/h4&gt;

&lt;p&gt;さて，pdfは，大抵の場合，いくつかのディレクトリに分けて置いてあるであろう．それを全て1箇所に集約して全文検索ができるようにするために，シンボリックリンクを使用する．具体的には，pdfのあるディレクトリが，/Data/hogehoge, /Data/fugaguga, /Data/misc とすると，以下のようにする．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd /Users/taipapa/Sites/pdf/PDFs
$ ln -s /Data/hogehoge .
$ ln -s /Data/fugafuga .
$ ln -s /Data/misc .
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;全文検索用のindexの作成&#34;&gt;全文検索用のindexの作成&lt;/h3&gt;

&lt;p&gt;hyperestraierのestcmdを用いて，空のindexを作成する．名前はマニュアルの真似をしてcasketとする（わかれば何でも良いと思う）．これはpdfの配下でPDFsと同じレベルに置く&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ pwd
/Users/taipapa/Sites/pdf
$ estcmd create casket
$ ls -la
total 24
drwxr-xr-x   5 taipapa  staff   160 Jul 29 20:34 .
drwxr-xr-x   8 taipapa  staff   256 Aug  4 22:19 ..
-rw-r--r--@  1 taipapa  staff  8196 Aug  5 22:12 .DS_Store
drwxr-xr-x  10 taipapa  staff   320 Jul 29 20:21 PDFs
drwxr-xr-x  11 taipapa  staff   352 Jul 29 21:14 casket
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでようやく，indexを作成する準備が整った．後は以下のように叩けば良い．optionについてはマニュアルを参照．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd /Users/taipapa/Sites/pdf
$ estcmd gather -pc UTF-8 -cl -fx &amp;quot;.pdf&amp;quot; &amp;quot;H@estfxpdftohtml&amp;quot; -il ja -lf -1 -sd -cm -um casket PDFs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;document数が11734個，語数が1351563のindex作成に要した時間は約40分強であった．これは，MacBook Pro (15-inch, Late 2016)でもiMac 2012 でも，ほとんど変わらなかった．&lt;/p&gt;

&lt;p&gt;optionとしては，optimizeがインデックスを最適化して、不要な領域を削除，purgeはインデックス内にあってファイルシステム上にない文書の情報を削除する．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd /Users/taipapa/Sites/pdf
$ estcmd optimize /Library/WebServer/Documents/pdf/casket
$ estcmd purge -cl /Library/WebServer/Documents/pdf/casket
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;indexの更新&#34;&gt;indexの更新&lt;/h3&gt;

&lt;p&gt;前述の3つのコマンドを打てば良い．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd /Users/taipapa/Sites/pdf
$ estcmd gather -pc UTF-8 -cl -fx &amp;quot;.pdf&amp;quot; &amp;quot;H@estfxpdftohtml&amp;quot; -il ja -lf -1 -sd -cm -um casket PDFs
$ estcmd optimize /Library/WebServer/Documents/pdf/casket
$ estcmd purge -cl /Library/WebServer/Documents/pdf/casket
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最初にゼロからindexを作成する際は，上記のようにかなり時間がかかるが，一旦作ってしまえば，更新はごく短時間で終了する．更新の自動化については，Amrtaさんの &lt;a href=&#34;https://skalldan.wordpress.com/2011/07/01/hyper-estraier-で-pdf-文書管理/#sec-3&#34; target=&#34;_blank&#34;&gt;インデックス更新の自動化&lt;/a&gt; を参考にされたい．&lt;/p&gt;

&lt;h3 id=&#34;検索のテスト&#34;&gt;検索のテスト&lt;/h3&gt;

&lt;p&gt;試しにterminalで検索してみる．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd /Users/taipapa/Sites/pdf
$ estcmd search -vh casket HSP27
--------[02D18ACF711B9586]--------
VERSION	1.0
NODE	local
HIT	288
HINT#1	hsp27	288
TIME	0.001226
DOCNUM	11734
WORDNUM	1354563
VIEW	HUMAN
..........
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;うん，ちゃんと動いている．それに速い！&lt;/p&gt;

&lt;h2 id=&#34;apache-set-up&#34;&gt;Apache set up&lt;/h2&gt;

&lt;p&gt;terminalで検索ではあまりに寂しいので，ブラウザで検索できるようにするために，Web serverを立ち上げる．MacにはデフォルトでApacheがインストールされているというありがたい状態になっているので，これを使う．なお，Apacheについては，&lt;a href=&#34;https://www.kagoya.jp/howto/rentalserver/apache/&#34; target=&#34;_blank&#34;&gt;Apacheとは？Webサーバーの仕組みと人気サーバーソフトを徹底解説&lt;/a&gt;などを参考にされたい．&lt;/p&gt;

&lt;p&gt;Apacheの設定については，以下を参考にした．&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;参考1：&lt;a href=&#34;https://qiita.com/shuntaro%5Ftamura/items/bdabcb77926dc92617b1&#34; target=&#34;_blank&#34;&gt;Macでローカルサーバを立ち上げる方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考2：&lt;a href=&#34;https://qiita.com/kid%5Fdrill/items/5c85917068490177b6ab&#34; target=&#34;_blank&#34;&gt;MacでApacheを立ち上げてみる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考3：&lt;a href=&#34;https://qiita.com/YuukiWatanabe/items/f89fe047ace61d2d2b45&#34; target=&#34;_blank&#34;&gt;Macでローカルサーバー構築あれこれ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考4：&lt;a href=&#34;https://httpd.apache.org/docs/2.4/ja/howto/cgi.html&#34; target=&#34;_blank&#34;&gt;Apache Tutorial: CGI による動的コンテンツ&lt;/a&gt;  （結局，きちんと理解する為には，これをはじめとするApacheのチュートリアルを読むのが一番であった）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これらのサイトを読んだ方が早いのだが，自分のために設定などをまとめておく．&lt;/p&gt;

&lt;p&gt;まず，念のためにApacheが既にインストールされているかどうかを確かめてみる．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ httpd -v
Server version: Apache/2.4.34 (Unix)
Server built:   Feb 22 2019 20:20:11
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;確かにインストールされている．&lt;/p&gt;

&lt;h3 id=&#34;cgi-を許可するように-apache-を設定する&#34;&gt;CGI を許可するように Apache を設定する&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;参照：&lt;a href=&#34;https://httpd.apache.org/docs/2.4/ja/howto/cgi.html&#34; target=&#34;_blank&#34;&gt;Apache Tutorial: CGI による動的コンテンツ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Apacheの設定ファイルの場所は、/etc/apache2/httpd.conf&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;CGI (Common Gateway Interface) は，ウェブサーバが コンテンツ生成をする外部プログラムと協調して動作するための方法を 定義している．&lt;/li&gt;
&lt;li&gt;CGI プログラムを正しく動作させるには、CGI を許可するように Apache の設定を行う必要がある．&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Apache が共有モジュール機能付きでビルドされている場合、モジュールがロードされていることを確認する．具体的には，/etc/apache2/httpd.conf をviを使って以下のように書き換えれば良い（root権限が必要なので sudo している）．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo vi /etc/apache2/httpd.conf
....
165 #LoadModule cgi_module libexec/apache2/mod_cgi.so
-----&amp;gt;
LoadModule cgi_module libexec/apache2/mod_cgi.so
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;165行目の行頭の＃を外してアンコメントし，有効化しておく．&lt;br /&gt;
これをやらないと，cgiが働かず，そのファイル自体がダウンロードされてしまう．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;設定ファイルの更新内容を反映させるためにはApacheの再起動が必要&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;apacheの起動-再起動&#34;&gt;Apacheの起動，再起動&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Apacheの起動&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo apachectl start
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Apacheの停止&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo apachectl stop
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Apacheの再起動&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo apachectl restart
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これでApacheを起動したので，hyperestraierに含まれている検索用CGI scriptを利用する．&lt;/p&gt;

&lt;h3 id=&#34;cgiが動くかどうかのテスト&#34;&gt;CGIが動くかどうかのテスト&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://httpd.apache.org/docs/2.4/ja/howto/cgi.html&#34; target=&#34;_blank&#34;&gt;Apache Tutorial: CGI による動的コンテンツ&lt;/a&gt; には，「ScriptAlias ディレクティブを使用して、 CGI プログラム用の特別な別ディレクトリを Apache に設定します。 Apache は、このディレクトリ中の全てのファイルを CGI プログラムであると仮定します。 そして、この特別なリソースがクライアントから要求されると、 そのプログラムの実行を試みます。」と記載されている．一方, mojaveのデフォルトの /etc/apache2/httpd.confでは，ScriptAliasではなく，以下のようにScriptAliasMatchを用いている．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;373  ScriptAliasMatch ^/cgi-bin/((?!(?i:webobjects)).*$) &amp;quot;/Library/WebServer/CGI-Executables/$1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この正規表現の記述により，cgi-bin/というパスが/Library/WebServer/CGI-Executables/に対応するようになっている（詳細は，&lt;a href=&#34;http://httpd.apache.org/docs/2.4/mod/mod%5Falias.html#scriptalias&#34; target=&#34;_blank&#34;&gt;ScriptAlias ディレクティブ&lt;/a&gt;  のScriptAliasMatch ディレクティブを参照）&lt;/p&gt;

&lt;p&gt;ということで，/Library/WebServer/CGI-Executables/にcgi scriptを置けば，CGI programとして動くはずである．macでは最初からperlがインストールされているので，以下のようなperl script（&amp;rdquo;Hello&amp;rdquo;と表示するだけ）を作成して試してみる．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;#!/usr/bin/perl
print &amp;quot;Content-type: text/html \n\n&amp;quot;;
print &amp;quot;Hello&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これを，test.cgiとして保存し，&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ chomod 755 test.cgi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;して，実行権限を付与した上で，/Library/WebServer/CGI-Executables/に置く．この状態で，ブラウザのurl windowに localhost/cgi-bin/test.cgi と打ち込むと，&amp;rdquo;Hello&amp;rdquo; と表示される．&lt;/p&gt;

&lt;p&gt;さて，次の段階に進む前にDocumentRootについて，ちょっと説明が必要（後日の自分のため）．&lt;/p&gt;

&lt;h3 id=&#34;documentroot&#34;&gt;DocumentRoot&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;参考：&lt;a href=&#34;https://www.adminweb.jp/apache/docroot/index1.html&#34; target=&#34;_blank&#34;&gt;ドキュメントルート(DocumentRoot)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;/etc/apache2/httpd.confを，lessを使って読んでみると以下のように書かれている．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ less -N /etc/apache2/httpd.conf
..........
240 #
241 # DocumentRoot: The directory out of which you will serve your
242 # documents. By default, all requests are taken from this directory, but
243 # symbolic links and aliases may be used to point to other locations.
244 #
245 DocumentRoot &amp;quot;/Library/WebServer/Documents&amp;quot;
246 &amp;lt;Directory &amp;quot;/Library/WebServer/Documents&amp;quot;&amp;gt;
..........
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;要するにDocumentRootというのは文書やコンテンツの置き場所として使われるディレクトリである．Macの場合は， &lt;strong&gt;DocumentRoot &amp;ldquo;/Library/WebServer/Documents&amp;rdquo;&lt;/strong&gt; と指定されており，WWW serverとして公開する内容は，/Library/WebServer/Documents 以下に配置していくことになる．他の場所を参照するためにシンボリックリンクやエーリアスを使用しても良いと書かれている．&lt;/p&gt;

&lt;p&gt;先ほど起動したApacheへブラウザからアクセスすると（ブラウザのurl が表示されているところにlocalhostと打てば良い）以下のような画面が表示される．&lt;/p&gt;







&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/Apache.jpg&#34; &gt;

&lt;img src=&#34;/img/Apache.jpg&#34; width=&#34;80%&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;


&lt;p&gt;これは，/Library/WebServer/Documents/index.html.en が表示されているのである．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ less /Library/WebServer/Documents/index.html.en
&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;It works!&amp;lt;/h1&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;
/Library/WebServer/Documents/index.html.en (END)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;つまり，この  /Library/WebServer/Documents ディレクトリの配下が， &lt;a href=&#34;http://localhost&#34; target=&#34;_blank&#34;&gt;http://localhost&lt;/a&gt; のroot直下となる．pdfを含むディレクトリ，あるいはそのシンボリックリンクを/Library/WebServer/Documents ディレクトリの配下に置けば全文検索を行うcgi scriptの対象とできるわけである．&lt;/p&gt;

&lt;p&gt;しかし，そうなると，前述の/Library/WebServer/CGI-Executables/に於いても同じであるが，全ての作業をrootとして行わなければならなくなり，何をするにもsudoしないといけないのが面倒であるし，security上でも問題であろう．そこで，UserDir ディレクティブを使って 各ユーザがホームディレクトリにSites directoryを作成し，ウェブサイトを構築できるように設定する．要するに，先ほど作成した/Users/taipapa/Sites/pdf/以下のディレクトリで全文検索ができるように設定するということである．&lt;/p&gt;

&lt;h3 id=&#34;ユーザ毎のウェブディレクトリ&#34;&gt;ユーザ毎のウェブディレクトリ&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;参照1：&lt;a href=&#34;http://motw.mods.jp/Mac/local%5Fserver.html&#34; target=&#34;_blank&#34;&gt;apacheを使ってローカルサーバーを構築する方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参照2：&lt;a href=&#34;http://neos21.hatenablog.com/entry/2019/01/27/080000&#34; target=&#34;_blank&#34;&gt;MacOS 同梱の Apache が参照するドキュメントルートを変更する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参照3：&lt;a href=&#34;https://qiita.com/colorrabbit/items/3ab4c2d863a55ca72d35&#34; target=&#34;_blank&#34;&gt;MacOS X の Yosemite (10.10) で Sites ディレクトリを使って localhost をアカウント別に利用する方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参照4：&lt;a href=&#34;https://httpd.apache.org/docs/2.4/ja/howto/public%5Fhtml.html&#34; target=&#34;_blank&#34;&gt;ユーザ毎のウェブディレクトリ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;やはりApacheのチュートリアル（&lt;a href=&#34;https://httpd.apache.org/docs/2.4/ja/howto/public%5Fhtml.html&#34; target=&#34;_blank&#34;&gt;ユーザ毎のウェブディレクトリ&lt;/a&gt;）を読むのが一番分かりやすかった．以下はこのサイトからの引用&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;「複数のユーザのいるシステムでは、UserDir ディレクティブを使って 各ユーザがホームディレクトリにウェブサイトを構築できるように設定することが 可能です。URL &lt;a href=&#34;http://example.com/~username/&#34; target=&#34;_blank&#34;&gt;http://example.com/~username/&lt;/a&gt; を訪れた人は &amp;ldquo;username&amp;rdquo; というユーザの UserDir ディレクティブで指定された サブディレクトリからコンテンツを得ることになります。」&lt;/li&gt;
&lt;li&gt;「デフォルトではこれらのディレクトリへのアクセスは許可されていません。 UserDir を使って有効にできます。 有効にするには、デフォルトの設定ファイルで付随する httpd-userdir.conf ファイルが必要」という翻訳になっている．意味はなんとなくわかるが，後半部分は「デフォルトの設定ファイルであるhttpd-userdir.conf ファイルの中の次の行をアンコメントすることによりアクセスが可能となる．また，必要に応じてhttpd-userdir.confも適切に変更する」と訳すべきと思う．&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;httpd-userdir-dot-confの有効化&#34;&gt;httpd-userdir.confの有効化&lt;/h4&gt;

&lt;p&gt;手順としては，まず，/etc/apache2/httpd.confの511行目の行頭の#を外し，コメントアウトを外してhttpd-userdir.confを有効にする．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo vi /etc/apache2/httpd.conf
..........
510 # User home directories
511 #Include /private/etc/apache2/extra/httpd-userdir.conf
-----&amp;gt;
511 Include /private/etc/apache2/extra/httpd-userdir.conf
..........
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;httpd-userdir-dot-confの編集-ユーザー毎の設定ファイルを読み込む様にする&#34;&gt;httpd-userdir.confの編集（ユーザー毎の設定ファイルを読み込む様にする）&lt;/h4&gt;

&lt;p&gt;ついで，有効にした /etc/apache2/extra/httpd-userdir.confを見て，編集する．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ sudo vi /etc/apache2/extra/httpd-userdir.conf

1 # Settings for user home directories
2 #
3 # Required module: mod_authz_core, mod_authz_host, mod_userdir
4
5 #
6 # UserDir: The name of the directory that is appended onto a user&#39;s home
7 # directory if a ~user request is received.  Note that you must also set
8 # the default access control for these directories, as in the example below.
9 #
10 UserDir Sites
11
12 #
13 # Control access to UserDir directories.  The following is an example
14 # for a site where these directories are restricted to read-only.
15 #
16 # Include /private/etc/apache2/users/*.conf
17 &amp;lt;IfModule bonjour_module&amp;gt;
18        RegisterUserSite customized-users
19 &amp;lt;/IfModule&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;10行目の&amp;rdquo;UserDir Sites&amp;rdquo;は デフォルトでアンコメントされており，そのままで良い．これにより，~usernameでSites directoryにアクセスできるようになる．編集する部分は，16行目の &amp;ldquo; # Include /private/etc/apache2/users/*.conf&amp;rdquo; であり，行頭の＃を外してアンコメントし，有効化しておく．これによりユーザーごとの設定ファイルを読み込む様になる（&lt;a href=&#34;https://qiita.com/colorrabbit/items/3ab4c2d863a55ca72d35&#34; target=&#34;_blank&#34;&gt;MacOS X の Yosemite (10.10) で Sites ディレクトリを使って localhost をアカウント別に利用する方法&lt;/a&gt;）．&lt;/p&gt;

&lt;p&gt;また，3行目にあるように，ユーザーのホームディレクトリのセットアップのために， &lt;strong&gt;mod_authz_core, mod_authz_host, mod_userdirを全て有効&lt;/strong&gt; にしておく必要がある．以下のように， &lt;strong&gt;/etc/apache2/httpd.conf&lt;/strong&gt; を編集する．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo vi /etc/apache2/httpd.conf
......
77 LoadModule authz_host_module libexec/apache2/mod_authz_host.so
78 LoadModule authz_groupfile_module libexec/apache2/mod_authz_groupfile.so
79 LoadModule authz_user_module libexec/apache2/mod_authz_user.so
80 #LoadModule authz_dbm_module libexec/apache2/mod_authz_dbm.so
81 #LoadModule authz_owner_module libexec/apache2/mod_authz_owner.so
82 #LoadModule authz_dbd_module libexec/apache2/mod_authz_dbd.so
83 LoadModule authz_core_module libexec/apache2/mod_authz_core.so
......
173 #LoadModule speling_module libexec/apache2/mod_speling.so
174 #LoadModule userdir_module libexec/apache2/mod_userdir.so
175 LoadModule alias_module libexec/apache2/mod_alias.so
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;77行目の &amp;ldquo;LoadModule authz_host_module libexec/apache2/mod_authz_host.so&amp;rdquo; と83行目の &amp;ldquo;LoadModule authz_core_module libexec/apache2/mod_authz_core.so&amp;rdquo;はデフォルトでアンコメントされていたが，174行目の &amp;ldquo;#LoadModule userdir_module libexec/apache2/mod_userdir.so&amp;rdquo; はコメントアウトされていたので，#を外して有効化した．これらの設定で， &lt;strong&gt;ユーザーディレクトリが有効&lt;/strong&gt; になる．&lt;/p&gt;

&lt;h4 id=&#34;ユーザー毎の設定ファイルを作成&#34;&gt;ユーザー毎の設定ファイルを作成&lt;/h4&gt;

&lt;p&gt;自分の使っているusernameを知らない人はいないと思うが，万一分からなければ以下のコマンドを使う．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ whoami
taipapa
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ついで，/etc/apache2/users にユーザー毎の設定ファイルを作成する．今回はtaipapaの設定ファイルということになる．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo vi /etc/apache2/users/taipapa.conf

&amp;lt;Directory &amp;quot;/Users/taipapa/Sites/&amp;quot;&amp;gt;
AddHandler cgi-script cgi
AllowOverride All
Options Indexes FollowSymLinks Multiviews ExecCGI
Require all granted
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;内容を簡単に説明する．&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Directory (&lt;a href=&#34;https://httpd.apache.org/docs/2.4/ja/mod/core.html#directory&#34; target=&#34;_blank&#34;&gt;Directory ディレクティブ&lt;/a&gt;): 指定されたディレクトリとそのサブディレクトリにのみ ディレクティブを適用させるためには、 Directory と /Directory を対として、ディレクティブ群を囲む．以下はディレクティブの説明&lt;/li&gt;
&lt;li&gt;AddHandler (&lt;a href=&#34;https://httpd.apache.org/docs/2.4/ja/mod/mod%5Fmime.html#addhandler&#34; target=&#34;_blank&#34;&gt;AddHandler ディレクティブ&lt;/a&gt; ): ファイル名の拡張子を指定されたハンドラにマップする．&amp;rdquo;AddHandler cgi-script cgi&amp;rdquo; により，/Users/taipapa/Sites/の配下にある拡張子 &amp;ldquo;.cgi&amp;rdquo; で終わるファイルを CGI スクリプトとして扱うようになる．&lt;/li&gt;
&lt;li&gt;AllowOverride (&lt;a href=&#34;https://httpd.apache.org/docs/2.4/ja/mod/core.html#allowoverride&#34; target=&#34;_blank&#34;&gt;AllowOverride ディレクティブ&lt;/a&gt;): このディレクティブが All に設定されている時には、 .htaccess という コンテキスト を持つ 全てのディレクティブが利用できる．&lt;/li&gt;
&lt;li&gt;Options (&lt;a href=&#34;https://httpd.apache.org/docs/2.4/ja/mod/core.html#options&#34; target=&#34;_blank&#34;&gt;Options ディレクティブ&lt;/a&gt;): ディレクトリに対して使用可能な機能を設定する．個々の機能はリンク先を参照．今回重要なのは， &lt;strong&gt;ExecCGI&lt;/strong&gt; で，これはmod_cgiによるCGI scriptの実行を許可する．&lt;/li&gt;
&lt;li&gt;Require (参照：&lt;a href=&#34;https://qiita.com/100/items/ab31e57fcc66ac661d5c&#34; target=&#34;_blank&#34;&gt;Apache 2.4 設定ファイルの記述例&lt;/a&gt;): サーバーのディレクトリに接続してくるクライアントについて、許可・拒否する条件を指定するディレクティブ．昔はAllow ディレクティブやDeny ディレクティブを利用していた． &lt;strong&gt;&amp;ldquo;Require all granted&amp;rdquo; は、すべてのクライアントからの接続を許可する．&lt;/strong&gt; &amp;ldquo;Require all denied&amp;rdquo; は、すべてのクライアントからの接続を拒否する．&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これで，Apache関連の設定が終了した．次はいよいよCGI scriptの設定である．&lt;/p&gt;

&lt;h2 id=&#34;hyperestraier付属の全文検索用cgi-scriptのset-up&#34;&gt;Hyperestraier付属の全文検索用CGI scriptのset up&lt;/h2&gt;

&lt;p&gt;ようやく，ブラウザによる全文検索ができるようにするためにCGI scriptのset upをするところまでたどり着いた．hyperestraierに含まれている検索用CGI scriptは，&lt;a href=&#34;https://fallabs.com/hyperestraier/uguide-ja.html#estseek&#34; target=&#34;_blank&#34;&gt;estseek.cgi&lt;/a&gt;である．詳細はリンク先のマニュアルを参照していただきたい．そこにはこうある．「estseek.cgiが動作するには、設定ファイルとテンプレートファイルとトップページファイルとヘルプファイルが必要です。それぞれestseek.conf、estseek.tmpl、estseek.top、estseek.helpというのが標準的な名前です。」これらのscriptおよび関連ファイルは，brewでインストールした場合は，以下のような場所に入る．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ mdfind -name estseek
/usr/local/Cellar/hyperestraier/1.4.13/libexec/estseek.cgi
/usr/local/Cellar/hyperestraier/1.4.13/share/hyperestraier/locale/ja/estseek.top
/usr/local/Cellar/hyperestraier/1.4.13/share/hyperestraier/locale/ja/estseek.tmpl
/usr/local/Cellar/hyperestraier/1.4.13/share/hyperestraier/locale/ja/estseek.help
/usr/local/Cellar/hyperestraier/1.4.13/share/hyperestraier/locale/ja/estseek.conf
/usr/local/Cellar/hyperestraier/1.4.13/share/hyperestraier/increm/estseek-frame.html
/usr/local/Cellar/hyperestraier/1.4.13/share/hyperestraier/increm/estseek-form.html
/usr/local/Cellar/hyperestraier/1.4.13/share/hyperestraier/estseek.top
/usr/local/Cellar/hyperestraier/1.4.13/share/hyperestraier/estseek.tmpl
/usr/local/Cellar/hyperestraier/1.4.13/share/hyperestraier/estseek.help
/usr/local/Cellar/hyperestraier/1.4.13/share/hyperestraier/estseek.conf

$ ls /usr/local/Cellar/hyperestraier/1.4.13/libexec/
estfraud.cgi* estproxy.cgi* estscout.cgi* estseek.cgi*  estsupt.cgi*

$ ls /usr/local/Cellar/hyperestraier/1.4.13/share/hyperestraier/
COPYING        estfraud.conf  estscout.conf  estseek.top    locale/
ChangeLog      estproxy.conf  estseek.conf   estsupt.conf
THANKS         estraier.idl   estseek.help   filter/
doc/           estresult.dtd  estseek.tmpl   increm/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;そこで，これらのscriptをユーザーディレクトリのしかるべき場所にコピーする．今回は，まず，前半部で作成した/Users/taipapa/Sitesにcgi-bin というディレクトリを作成し，CGI scriptの置き場所とした．そして，その配下にestというディレクトリを作って，そこにhyperestraierによる全文検索用のscript などをコピーした．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd /Users/taipapa/Sites
$ mkdir -p cgi-bin/est
$ tree -L 2
.
├── cgi-bin
│   ├── est
│   └── test.cgi
├── index.html
├── pdf
│   ├── PDFs
│   └── casket
└── test.cgi
$ cd cgi-bin/est
$ cp -a /usr/local/Cellar/hyperestraier/1.4.13/libexec/* .
$ cp -a /usr/local/Cellar/hyperestraier/1.4.13/share/hyperestraier/est* .
$ ls
estfraud.cgi*  estproxy.conf  estscout.cgi*  estseek.conf   estseek.top
estfraud.conf  estraier.idl   estscout.conf  estseek.help   estsupt.cgi*
estproxy.cgi*  estresult.dtd  estseek.cgi*   estseek.tmpl   estsupt.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;設定ファイルであるestseek.confはdefaultでは以下のようになっている．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd /Users/taipapa/Sites/cgi-bin/est
$ less -N estseek.conf
..........
1 indexname: casket
2
3 tmplfile: estseek.tmpl
4
5 topfile: estseek.top
6
7 helpfile: estseek.help
8
9 lockindex: true
10
11 pseudoindex:
12
13 replace: ^file:///home/mikio/public_html/{{!}}http://localhost/
14 replace: /index\.html?${{!}}/
15
16 showlreal: false
..........
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これを以下のように編集する．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;1 #indexname: casket
2 indexname: /Users/taipapa/Sites/pdf/casket
3
4 tmplfile: estseek.tmpl
5
6 topfile: estseek.top
7
8 helpfile: estseek.help
9
10 lockindex: true
11
12 pseudoindex:
13
14 #replace: ^file:///home/mikio/public_html/{{!}}http://localhost/
15 #replace: /index\.html?${{!}}/
16
17 replace: ^file:///Data/{{!}}http://localhost/~taipapa/pdf/PDFs/
18
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;17行目の &lt;strong&gt;replace:&lt;/strong&gt; の部分はかなりの試行錯誤が必要であった．マニュアルでは，「replaceは正規表現によってURIを変換するのに使います。複数回指定できます。先頭にマッチする「^」を駆使すれば接頭辞（ディレクトリ）の変換ができますし、末尾にマッチする「$」を駆使すれば接尾辞（拡張子）の変換ができます。」とあるように，どこにpdf文書を置くかで適切に変更する必要がある．私の場合は，前述のごとく，pdfのあるディレクトリが，/Data/hogehoge, /Data/fugaguga, /Data/misc で，/Users/taipapa/Sites/pdf/PDFs にシンボリックリンクで集約したので，このような設定になった．他のファイルはdefaultのままとした．&lt;/p&gt;

&lt;p&gt;これで，全ての準備は整った．Sites ディレクトリには前半部で説明した通り，pdf archiveへのシンボリックリンクが集約されており，かつ，全文検索用の索引であるcasketも置いてある．全てが正しく設定されていれば，ブラウザのurl windowに &lt;strong&gt;&lt;a href=&#34;http://localhost/~username/cgi-bin/est/estseek.cgi&#34; target=&#34;_blank&#34;&gt;http://localhost/~username/cgi-bin/est/estseek.cgi&lt;/a&gt;&lt;/strong&gt; （今回は~usernameは~taipapa） と打ち込むと，以下のような全文検索の画面になるはずである．&lt;/p&gt;







&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/FTsearch_view.jpg&#34; &gt;

&lt;img src=&#34;/img/FTsearch_view.jpg&#34; width=&#34;80%&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;


&lt;p&gt;早速検索してみよう．HSP27と入れてみると，結果は以下の通り．検索に用いたキーワードが黄色でハイライトされている．&lt;/p&gt;







&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/FTsearch_view2.jpg&#34; &gt;

&lt;img src=&#34;/img/FTsearch_view2.jpg&#34; width=&#34;80%&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;


&lt;p&gt;一番最初の2667.full.pdfを右クリックすると，下のように別タブでpdfが開く．&lt;/p&gt;







&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/FTsearch_view3.jpg&#34; &gt;

&lt;img src=&#34;/img/FTsearch_view3.jpg&#34; width=&#34;80%&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;


&lt;p&gt;また，各結果の[detail]の部分を右クリックすると以下のような画面が別タブで開く．&lt;/p&gt;







&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/FTsearch_view4.jpg&#34; &gt;

&lt;img src=&#34;/img/FTsearch_view4.jpg&#34; width=&#34;80%&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;


&lt;p&gt;これは，pdfの内容をテキストで出力したものである．一見，見にくくて何の役にたつと思うかもしれないが，検索キーワードが黄色にハイライトされており，この単語の使い方が一目でわかるようになっている．論文を書くときに参考になる．&lt;/p&gt;

&lt;p&gt;この全文検索を使い始めてもう5-6年になるが，一旦セットアップしてしまえば，時々indexを更新する以外は手間いらずで，重宝している．更新の自動化については，前述の通り．&lt;/p&gt;

&lt;p&gt;今回は，このブログを始めて以来の長文になってしまった．後日の自分のためにできるだけ細かいところまで書き留めておいた．半分以上はApacheの設定に関する記述になっている（笑）．&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emacsでpdfを読む (pdf-tools) (2019.07.17追記)</title>
      <link>/post/pdf-tools/</link>
      <pubDate>Wed, 17 Jul 2019 00:00:00 +0900</pubDate>
      <guid>/post/pdf-tools/</guid>
      <description>&lt;p&gt;Emacsでpdf文書を読もうとするとdefaultではDocViewで読むことになるが，解像度がイマイチで動きもややモッサリとしていて使い勝手が悪かったため，サクッと止めて，skimを使っている．ただ，pdf-toolsというのがあって，こちらは割とスグレモノらしいとの噂は聞いていた．そこで，今回はこれを試してみることにした．&lt;/p&gt;

&lt;div class=&#34;ox-hugo-toc toc&#34;&gt;
&lt;div&gt;&lt;/div&gt;

&lt;div class=&#34;heading&#34;&gt;Table of Contents&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#pdf-tools&#34;&gt;PDF Tools&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#インストール&#34;&gt;インストール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#追記-2019年7月17日&#34;&gt;追記（2019年7月17日）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#設定&#34;&gt;設定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#使用法&#34;&gt;使用法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#org-pdfview&#34;&gt;org-pdfview&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#インストールと設定&#34;&gt;インストールと設定&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pdf-toolsと他のアプリ-skim-previewなど-との比較&#34;&gt;PDF Toolsと他のアプリ（skim, Previewなど）との比較&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/div&gt;
&lt;!--endtoc--&gt;&lt;/p&gt;

&lt;h2 id=&#34;pdf-tools&#34;&gt;PDF Tools&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;参考１：&lt;a href=&#34;https://github.com/politza/pdf-tools&#34; target=&#34;_blank&#34;&gt;pdf-tools&lt;/a&gt;　ご本家&lt;/li&gt;
&lt;li&gt;参考２：&lt;a href=&#34;http://blog.livedoor.jp/hiroaki8270/archives/22871970.html&#34; target=&#34;_blank&#34;&gt;emacsをPDF Viewerにしよう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考３：&lt;a href=&#34;https://ubutun.blogspot.com/2014/05/emacstexpdf.html&#34; target=&#34;_blank&#34;&gt;emacs内でTeX文書の作成からpdf閲覧まで行う&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考４：&lt;a href=&#34;https://www.reddit.com/r/emacs/comments/6x9gtb/pdftools%5Fon%5Fmacos/&#34; target=&#34;_blank&#34;&gt;pdf-tools on macos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考５：&lt;a href=&#34;http://pragmaticemacs.com/emacs/view-and-annotate-pdfs-in-emacs-with-pdf-tools/&#34; target=&#34;_blank&#34;&gt;VIEW AND ANNOTATE PDFS IN EMACS WITH PDF-TOOLS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考６：&lt;a href=&#34;http://pragmaticemacs.com/emacs/more-pdf-tools-tweaks/&#34; target=&#34;_blank&#34;&gt;MORE PDF-TOOLS TWEAKS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考７：&lt;a href=&#34;http://pragmaticemacs.com/emacs/even-more-pdf-tools-tweaks/&#34; target=&#34;_blank&#34;&gt;EVEN MORE PDF-TOOLS TWEAKS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考８：&lt;a href=&#34;https://github.com/politza/pdf-tools/issues/189&#34; target=&#34;_blank&#34;&gt;pdf-tools pretty much unusable with linum-mode enabled&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考９：&lt;a href=&#34;https://www.youtube.com/watch?v=LFO2UbzbZhA&#34; target=&#34;_blank&#34;&gt;Using Emacs 44 - An Org mode and PDF-tools workflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ご本家のイントロに書いてあるが，DocViewのようにghostscriptで予めrenderしておくのではなく，on demandでページを作成し，メモリーに貯めておく仕組みになっている．このrenderingは，popplerという名前の特別なライブラリーによって行われるが，これはepdfinfoと呼ばれるserver programの中で走っている．こいつの仕事はEmacsからの要求を連続して読んで適切な結果，すなわち，PDFのページのPNG imageを作成することである．&lt;/p&gt;

&lt;p&gt;　　「実際のところ，PDFファイルを表示するのはPDF toolsの仕事の一部に過ぎない．popplerは文書に関する全ての情報を提供でき，かつ，それを修飾もできるので，遥かにたくさんのことができる」とイントロの最後で大見得を切って，何ができるかを示す&lt;a href=&#34;https://www.dailymotion.com/video/x2bc1is?forcedQuality=hd720&#34; target=&#34;_blank&#34;&gt;動画&lt;/a&gt;を紹介している．&lt;/p&gt;

&lt;h3 id=&#34;インストール&#34;&gt;インストール&lt;/h3&gt;

&lt;p&gt;OSXは公式にはサポートされていないが，コンパイルできたと報告されている，と書いてあり，実際，以下のように出来た．まず，homebrewでpopplerをインストールする．もし，まだ，automakeを入れていなければそれもhomebrewでインストールする．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ brew install poppler automake
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ついで，pkg-configをexportでいじるようなことが書いてあるが，特にそれはせずともよかった．ただし，pdf-toolsのインストールの際にコンパイルエラーが出た．どういうわけか， &lt;strong&gt;pdf-tools          20180428.1527&lt;/strong&gt; ではだめだったが，幸い， &lt;strong&gt;pdf-tools          20181221.1913&lt;/strong&gt; が出たので，参考4：&lt;a href=&#34;https://www.reddit.com/r/emacs/comments/6x9gtb/pdftools%5Fon%5Fmacos/&#34; target=&#34;_blank&#34;&gt;pdf-tools on macos&lt;/a&gt;を頼りに，これにアップデートしたところ，あとは問題なくインストールできた．&lt;/p&gt;

&lt;h3 id=&#34;追記-2019年7月17日&#34;&gt;追記（2019年7月17日）&lt;/h3&gt;

&lt;p&gt;その後何度かpdf-toolをコンパイルすることがあったが，「libffiがどこにあるか分からん」というようなエラーメッセージが出て，「pkg-configでなんとかせい」と怒られるようになった．つまり，ご本家に書いてある通りになったわけである．そこで，libffiのpkgconfigを探して，それをPKG_CONFIG_PATHに含めるようにした．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ mdfind -name pkgconfig | grep libffi
/usr/local/Cellar/libffi/3.2.1/lib/pkgconfig
$ export PKG_CONFIG_PATH=/usr/local/Cellar/libffi/3.2.1/lib/pkgconfig
$ /Applications/Emacs.app/Contents/MacOS/Emacs --debug-init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これで下記のように設定していると，以下のようにpdf-toolが無事にコンパイルされる．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;/Users/taipapa/.emacs.d/elpa/pdf-tools-20190413.2018/build/server/autobuild -i /Users/taipapa/.emacs.d/elpa/pdf-tools-20190413.2018/
---------------------------
Installing packages
---------------------------
Skipping package installation (already installed)

---------------------------
Configuring and compiling
---------------------------
./configure -q --bindir=/Users/taipapa/.emacs.d/elpa/pdf-tools-20190413.2018/ &amp;amp;&amp;amp; make -s

Is case-sensitive searching enabled ?     yes
Is modifying text annotations enabled ?   yes
Is modifying markup annotations enabled ? yes


---------------------------
Installing
---------------------------
make -s install
/usr/local/bin/gmkdir -p &#39;/Users/taipapa/.emacs.d/elpa/pdf-tools-20190413.2018&#39;
/usr/local/bin/ginstall -c epdfinfo &#39;/Users/taipapa/.emacs.d/elpa/pdf-tools-20190413.2018&#39;
make[1]: Nothing to be done for `install-data-am&#39;.

===========================
Build succeeded. :O)
===========================
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;設定&#34;&gt;設定&lt;/h3&gt;

&lt;p&gt;例によって，use-packagを用いて以下のように，init.orgに書けばよい．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;#+begin_src emacs-lisp
(use-package pdf-tools
  :ensure t
  :config
  ;; initialise
  (pdf-tools-install)
  ;; PDF Tools does not work well together with linum-mode
  (add-hook &#39;pdf-view-mode-hook (lambda() (nlinum-mode -1)))
  ;; open pdfs scaled to fit page
  ;; (setq-default pdf-view-display-size &#39;fit-page)
  ;; automatically annotate highlights
  (setq pdf-annot-activate-created-annotations t)
  ;; use normal isearch
  (define-key pdf-view-mode-map (kbd &amp;quot;C-s&amp;quot;) &#39;isearch-forward)
  ;; more fine-grained zooming
  (setq pdf-view-resize-factor 1.1)
  )
#+end_src
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下に内容を説明する．&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;pdf-tools-installにより最初のときにepdfinfoがコンパイルされる．&lt;/li&gt;
&lt;li&gt;行番号を表示するとうまく動かない．私はnlinum-modeを使っているのでpdf-view-modeの際には止めておく．&lt;/li&gt;
&lt;li&gt;ハイライトした部分には自動的に注釈を加える．&lt;/li&gt;
&lt;li&gt;swiperはうまく動かないので，C-sを普通のisearchに戻す&lt;/li&gt;
&lt;li&gt;＋とーで拡大，縮小だが，これを10%ずつにする．&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;使用法&#34;&gt;使用法&lt;/h3&gt;

&lt;p&gt;上記のインストールと設定を行えば，C-x C-fでも，drag &amp;amp; dropでも，Emacsのpdf toolsのpdf-view-modeでpdfが開くようになる．ここまでくれば，あとは色々なことができる．&lt;/p&gt;

&lt;h4 id=&#34;highlight&#34;&gt;highlight&lt;/h4&gt;

&lt;p&gt;マウスで文章をなぞって選択（下の画像の白黒反転した部分）したあとに，C-c C-a h もしくは，画像で示したように，PDF Tools &amp;rarr; Add markup annotation &amp;rarr; highlightを選択すれば，&lt;/p&gt;







&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/pdf-tools-2.jpg&#34; &gt;

&lt;img src=&#34;/img/pdf-tools-2.jpg&#34; width=&#34;100%&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;


&lt;p&gt;選択した部分がハイライトされ，下に新たなバッファが開いてそこに注釈が書けるようになる（下の画像参照）．書き終わったら，C-c C-cで注釈バッファが閉じる．なお，上に元からある黄色にハイライトされた部分は以前に選択してハイライトした部分である．&lt;/p&gt;







&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/pdf-tools-3.jpg&#34; &gt;

&lt;img src=&#34;/img/pdf-tools-3.jpg&#34; width=&#34;100%&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;


&lt;h4 id=&#34;display-annotations&#34;&gt;Display Annotations&lt;/h4&gt;

&lt;p&gt;複数箇所をハイライトして注釈をつけたあとに，全ての注釈を一度にリストにしてみることができる．C-c C-a l もしくは，PDF Tools &amp;rarr; Display Annotationsを選択すれば，下の画像のように，下に２つの新たなバッファが開く．真ん中のバッファに注釈のリストが表示される．arrow keyでリスト内を移動し，スペースキーを押すと上のバッファでその注釈のところに移動してブルーの枠で囲んで表示され，下のバッファに注釈の内容が表示される．qを押せば，2つのバッファは閉じる．&lt;/p&gt;







&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/pdf-tools-4.jpg&#34; &gt;

&lt;img src=&#34;/img/pdf-tools-4.jpg&#34; width=&#34;100%&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;


&lt;h4 id=&#34;isearch-document--c-s&#34;&gt;Isearch document (C-s)&lt;/h4&gt;

&lt;p&gt;pdf-toolsはswiperとはconflictするために，C-sは本来のisearch-forwardに戻して設定しておく必要がある（前述の設定の通り）．これで，C-sとやると，minibufferに打ち込んだ語が反転して表示され，C-sとやるごとに先へ移動していく．下の画像では，&amp;rdquo;MK2&amp;rdquo;という単語を打った時の状態を示している．&lt;/p&gt;







&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/pdf-tools-C-s.jpg&#34; &gt;

&lt;img src=&#34;/img/pdf-tools-C-s.jpg&#34; width=&#34;100%&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;


&lt;h4 id=&#34;occur-document&#34;&gt;Occur document&lt;/h4&gt;

&lt;p&gt;PDF Tools &amp;rarr; Occur documentを選択すれば，minibufferに List lines matching PCRE: と表示される．そこに例えばMK2と打てば，下の画像のように，下に新たなバッファが開き，MK2のあるページとそこにある文章のリストが表示される．arrow keyでリスト内を移動し，スペースキーを押すと上のバッファでその注釈のところに移動する．qを押せば，下のバッファは閉じる．&lt;/p&gt;







&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/pdf-tools-occur.jpg&#34; &gt;

&lt;img src=&#34;/img/pdf-tools-occur.jpg&#34; width=&#34;100%&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;


&lt;h2 id=&#34;org-pdfview&#34;&gt;org-pdfview&lt;/h2&gt;

&lt;p&gt;org-modeからpdf文書へのリンクを開くのをサポートするパッケージ．&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;参考１：&lt;a href=&#34;https://github.com/markus1189/org-pdfview&#34; target=&#34;_blank&#34;&gt;org-pdfview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考２：&lt;a href=&#34;https://emacs.stackexchange.com/questions/19686/how-to-use-pdf-tools-pdf-view-mode-in-emacs&#34; target=&#34;_blank&#34;&gt;How to use pdf-tools (pdf-view-mode) in emacs?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考３：&lt;a href=&#34;https://emacs.stackexchange.com/questions/31895/configure-org-pdfview-and-pdf-tools-to-open-at-page&#34; target=&#34;_blank&#34;&gt;Configure org-pdfview and pdf-tools to open at page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;インストールと設定&#34;&gt;インストールと設定&lt;/h3&gt;

&lt;p&gt;例によって，use-packagを用いて以下のように，init.orgに書くだけ．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;#+begin_src emacs-lisp
(use-package org-pdfview
  :ensure t)
#+end_src
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;例えば，Emacsのpdf-toolsを用いて，hogehoge.pdfを開いて読んでいるとする．そこで，C-c lとすると， &lt;strong&gt;Stored: /Data/Hoge/Fuga/hogefuga.pdf&lt;/strong&gt; と今読んでいるpdfへのリンクが保存される．そして，それを保存しておきたいorg文書の適当な場所で，C-c C-lとすれば，そのリンクが貼り付けられる．以前の記事（&lt;a href=&#34;../org-html-export-theme&#34;&gt;Org-modeでhtml exportの際のthemeについて&lt;/a&gt;）で書いたような文献のまとめを作成しているときに，元文献とリンクさせておく際などに便利である．貼り付けたリンクをクリックすれば，元文献がEmacsのpdf-toolsによって開かれるようになる（画面が分割され，下に新たなバッファが開いてそこにpdfが表示される）．割と便利である．&lt;/p&gt;

&lt;h2 id=&#34;pdf-toolsと他のアプリ-skim-previewなど-との比較&#34;&gt;PDF Toolsと他のアプリ（skim, Previewなど）との比較&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;注釈の一覧表示，C−s， occurなどの機能は便利である．&lt;/li&gt;
&lt;li&gt;skim, Previewなどでは，長方形ツールによりお好みの領域を選択してコピーすることができるし，このコピーした領域のみをpdfとして保存できるが，pdf-toolsではできない．&lt;/li&gt;
&lt;li&gt;skim, Preview, Adobe Acrobat Readerのように，全画面でプレゼンテーションするモードはない．&lt;/li&gt;
&lt;li&gt;Adobe Acrobat Readerのように，動画を動かすことは出来ない．&lt;/li&gt;
&lt;li&gt;上記２つの理由から，auctexを使用する際のpdf viewerとしてEmacsを使用していない．&lt;/li&gt;
&lt;li&gt;最近のpdfは，本文中に示された文献もしくはその番号をクリックすると，最後の文献リストの中の該当の論文のところに飛ぶようになっているものも多くなっているが，pdf-toolsはそれには対応していないようである．より正確にはリンク先が分からないようである．これは自力では解決できない．．．&lt;/li&gt;
&lt;li&gt;Outline構造にも対応しており，検出するのだが，リンク先が分からないようである．これも自力では解決できない．．．&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上のことより，学会発表用のスライドなどを作成している際は，skimなどの方がpdf viewerとして便利であるが，文献のまとめなどpdfを読み込む際には，pdf-toolsの方が向いているのではないかと考えている．&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emacsとskimで，latexのソースとpdfの間を行ったり来たり</title>
      <link>/post/synchronization/</link>
      <pubDate>Sun, 07 Oct 2018 00:00:00 +0900</pubDate>
      <guid>/post/synchronization/</guid>
      <description>

&lt;p&gt;以前の記事（&lt;a href=&#34;../beamer&#34;&gt;beamerでスライド原稿用pdfを作成する（その１）&lt;/a&gt;）で，Emacsでbeamerを用いてlatexのソースを書いてコンパイルし，スライド原稿としてpdfを出力する方法をまとめた．この際に，pdfの特定の箇所がlatexのソースでどこに当たるのかがわかったり，逆に，latexのソースの特定の箇所がpdf上のどこに当たるのかがわかったりすると便利である．今回はそれについてまとめる．なお，auctexの全般的な設定については，TeXWikiの&lt;a href=&#34;https://texwiki.texjp.org/?AUCTeX#h32722ec&#34; target=&#34;_blank&#34;&gt;macOS での設定例&lt;/a&gt; を参照していただきたい．&lt;/p&gt;

&lt;p&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;参照：&lt;a href=&#34;https://ryogan.org/blog/2015/12/30/mac-os-x-el-capitan-の-auctex-の設定/&#34; target=&#34;_blank&#34;&gt;Mac OS X El Capitan の AUCTeX の設定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参照：&lt;a href=&#34;https://texwiki.texjp.org/?Emacs#e9c08b3d&#34; target=&#34;_blank&#34;&gt;skimとの連携&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参照：&lt;a href=&#34;https://skalldan.wordpress.com/2011/07/20/auctex-の設定と便利な機能/&#34; target=&#34;_blank&#34;&gt;AUCTeX の設定と便利な機能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参照：&lt;a href=&#34;https://sourceforge.net/p/skim-app/wiki/TeX%5Fand%5FPDF%5FSynchronization/&#34; target=&#34;_blank&#34;&gt;TeX_and_PDF_Synchronization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;backward-search&#34;&gt;backward search&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;こちらのほうが便利なので最初に説明する．&lt;/li&gt;
&lt;li&gt;skimで表示されたpdf上の特定の箇所に該当するLaTeX文書の箇所を探して示してくれる．&lt;/li&gt;

&lt;li&gt;&lt;p&gt;この機能を可能にするには，skimの環境設定を開いて「同期する」の初期値を「カスタム」とし，コマンドのところに以下のように打ち込む．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ /usr/local/Cellar/emacs-mac/emacs-26.1-z-mac-7.1/bin/emacsclient
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;defaultでは初期値に「Emacs」となっており，本来ならこれで動くはずだが，homebrewで最新のEmacsをinstallしたために，もともと入っているemacsとはversionが異なる．つまり，サーバーとして起動しているEmacsと、使用するEmacsClientのバージョンが異なることになり，このままでは動かない．そこで，homebrewでインストールした方をfull pathで明示的に指示する必要がある．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;引数のところには，以下のように打ち込む．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ --no-wait +%line &amp;quot;%file&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;つまりこうなる．&lt;/p&gt;







&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/skim-1.jpg&#34; &gt;

&lt;img src=&#34;/img/skim-1.jpg&#34; width=&#34;100%&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;
&lt;/li&gt;

&lt;li&gt;&lt;p&gt;一方，Emacsのinit.orgには以下のように記述して，Emacs serverを立ち上げておく．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;#+begin_src emacs-lisp
;; Starts the Emacs server
(server-start)
#+end_src
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;これで，pdf上の任意の箇所で，Shift-Command-Clickすると，該当するlatex documentの箇所に飛ぶ．&lt;del&gt;もし，Emacsが立ち上がっていなければ，Emacsを立ち上げるところからやってくれる．素晴らしい！&lt;/del&gt; これは確かめてみると勘違いであった．Emacsは立ち上げておかないといけない．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;この機能は知ってしまうと，無くてはならないほど便利に感じる機能である．pdfで間違いを見つけたときに，それがlatexソースのどこに相当するかを同定するのは結構面倒であるが，この機能により一発で同定することができる．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;該当箇所が少しずれることがあるのが欠点であるが，それでも十分に役に立つ．&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;forward-search&#34;&gt;forward search&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;こちらも，backward searchほどではないが，役に立つ．&lt;/li&gt;
&lt;li&gt;Emacs上のlatex document上の特定の箇所に該当するpdfの箇所を探して示してくれる．&lt;/li&gt;

&lt;li&gt;&lt;p&gt;この機能を可能にするには，init.orgに以下のように記述する．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;#+begin_src emacs-lisp
(add-hook &#39;LaTeX-mode-hook
          (function (lambda ()
                      (add-to-list &#39;TeX-command-list
                                   &#39;(&amp;quot;displayline&amp;quot;
                                     &amp;quot;/Applications/Skim.app/Contents/SharedSupport/displayline %n %s.pdf \&amp;quot;%b\&amp;quot;&amp;quot;
                                     TeX-run-discard-or-function t t :help &amp;quot;Forward search with Skim&amp;quot;))
                      )))
#+end_src
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;これで，C-c C-c displayline により，Emacsのlatex document上の特定の箇所に該当するpdfの箇所に飛んでくれる．pdfの該当するところが赤丸で示される（数秒で消える）．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ただし，該当する箇所が結構ずれてしまうことが多い．最近は，beamerでしか使わないので，もしかすると，通常のlatex 文書だと狂いなく示すのかもしれない．まぁ，backward searchと違って， なくても困らない機能である．&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Emacsのorg-modeで論文を書く（その2：BibDeskによる論文収集と整理）</title>
      <link>/post/org-mode_paper_2/</link>
      <pubDate>Wed, 12 Sep 2018 00:00:00 +0900</pubDate>
      <guid>/post/org-mode_paper_2/</guid>
      <description>

&lt;p&gt;さて，前回（&lt;a href=&#34;../org-mode_paper_1&#34;&gt;Emacsのorg-modeで論文を書く（その1：pdfとhtmlへの出力）&lt;/a&gt;）はorg-modeによる論文本体の執筆に付いてまとめたわけだが，今回は論文引用の方法についてまとめる．と思ったのだが，論文を引用するためには，当然のことながら論文を収集しなければならない．そのうち膨大な数の論文の海に溺れることになる．そこで，収集した論文，つまり，pdfの整理をするソフトが必要になってくる．その引用も，書式や番号付を雑誌の規定に合わせて自動化してくれれば言うことはない．ということで，そのようなソフトについて書くことにする．有料ソフトの定番としては，EndoNoteがあるし，フリーソフトでは，&lt;a href=&#34;https://www.zotero.org&#34; target=&#34;_blank&#34;&gt;zotero&lt;/a&gt;や&lt;a href=&#34;https://www.mendeley.com/?switchedFrom=&#34; target=&#34;_blank&#34;&gt;Mendeley&lt;/a&gt;が有名である．私自身は，LaTeXを利用することが多い関係上，&lt;a href=&#34;https://bibdesk.sourceforge.io&#34; target=&#34;_blank&#34;&gt;BibDesk&lt;/a&gt;というこれまた老舗のソフトをもっぱら利用している．ネット上でもzoteroやmendeleyについての情報は豊富だが，BibDeskについてはそれほど見られないので，まとめておくことは多少の意味があるであろうと考え，BibDeskによる論文収集を説明することにした．&lt;/p&gt;

&lt;h2 id=&#34;bibdesk&#34;&gt;&lt;a href=&#34;https://bibdesk.sourceforge.io&#34; target=&#34;_blank&#34;&gt;BibDesk&lt;/a&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;texliveをインストールすればその中に入っているが，最新版はリンク先にあるので，そちらを落とすほうが良い．&lt;/li&gt;
&lt;li&gt;文献をbibtexのファイルとして管理する．pdfとの関連付けができるので，書誌事項とpdfが一体化して管理できる．&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.bibtex.org&#34; target=&#34;_blank&#34;&gt;bibtex&lt;/a&gt;に関しては，&lt;a href=&#34;https://qiita.com/SUZUKI%5FMasaya/items/14f9727845e020f8e7e9&#34; target=&#34;_blank&#34;&gt;BiBTeXとは&lt;/a&gt; を参照&lt;/li&gt;
&lt;li&gt;bibtexファイルなので，当然，latexの機能を用いて，文献の引用，引用スタイルの設定，文献リストの作成，文献リストのスタイルの設定などをすべて自動化できる．これが便利！&lt;/li&gt;

&lt;li&gt;&lt;p&gt;見た目はこんな感じ&lt;/p&gt;







&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/bibdesk.jpg&#34; &gt;

&lt;img src=&#34;/img/bibdesk.jpg&#34; width=&#34;100%&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;
&lt;/li&gt;

&lt;li&gt;&lt;p&gt;医学系の論文となると，やはり，&lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pubmed&#34; target=&#34;_blank&#34;&gt;PubMed&lt;/a&gt;などネットでの連携が重要である．下図のごとく，BibDeskではSearches menuからPubMedを選ぶことにより，BibDeskの中からPubMedを検索できる．&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;







&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/bibdesk-pubmed.jpg&#34; &gt;

&lt;img src=&#34;/img/bibdesk-pubmed.jpg&#34; width=&#34;100%&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;


&lt;ul&gt;
&lt;li&gt;&lt;p&gt;検索欄に，例えば，&amp;rdquo;heat shock protein&amp;rdquo;と打つと，下図のように検索結果が50編ずつ並ぶが，50編以上ある場合は，Searchを繰り返しクリックすることにより，100編と150編とどんどんリストに取り込まれていく．&lt;/p&gt;







&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/bibdesk-pubmed2.jpg&#34; &gt;

&lt;img src=&#34;/img/bibdesk-pubmed2.jpg&#34; width=&#34;100%&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;
&lt;/li&gt;

&lt;li&gt;&lt;p&gt;上図のごとく，検索結果欄の左端に&amp;rdquo;Import&amp;rdquo; ボタンがあるが，これをクリックするとその論文の書誌事項が取り込まれる．その際に，自分の文献リストの名前を，&amp;rdquo;hogefuga-reference.bib&amp;rdquo; など適当に決めれば良い．以後はそのリストに追加していくことになる．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;また，取り込まれる際にcite-keyをBibDeskが自動的に決めてくれる．このcite-keyは次回の記事で述べる「引用の自動化」の際にreftexに使用される．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;なお，PubMedの番号，つまり，Pmidが分かっていれば，それを打ち込めば一発で書誌事項を検索できる．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;リストの中から興味のある論文をクリックして選択し，グレーにハイライトさせると，下図のごとく右側のサイドパネルに，その論文のあるサイトを示すアイコンが表示される．これをクリックすれば，ブラウザーが開いてそのサイトに飛ぶ．もし，その論文がオープンアクセスであれば，あるいは，所属する組織が出版社と契約を交わしていれば，その論文のpdfを落とせる．落としたpdfをドラッグしてその論文に該当するリストのラインにドロップすれば，その書誌事項とpdfはリンクし，以降はその論文のサイドパネルにpdfのアイコンが表示され，ダブルクリックによりオープンするようになる．さらに言えば，pdfではなく，パワポやワードのファイルとして文献が存在することもある．同じようにドラッグ＆ドロップすれば，これまたリンクする．しかも一つの文献にいくつものpdfやその他のファイルをリンクできる．非常に便利である．&lt;/p&gt;







&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/bibdesk-pubmed3.jpg&#34; &gt;

&lt;img src=&#34;/img/bibdesk-pubmed3.jpg&#34; width=&#34;100%&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;
&lt;/li&gt;

&lt;li&gt;&lt;p&gt;また，下図のごとく，左のサイドパネルの一番上の方にある&amp;rdquo;Web BibDesk Web Group&amp;rdquo;をクリックして選択すれば，更にいろいろな文献ソースが表示される．医学系では，Google Scholarが有用なので，これをクリックすれば，BibDeskの中からGoogle Scholarを検索できるし，書誌事項も取り込める．pdfのリンクが存在すればBibDeskの中でpdfを落とすこともできる．&lt;/p&gt;







&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/bibdesk-pubmed4.jpg&#34; &gt;

&lt;img src=&#34;/img/bibdesk-pubmed4.jpg&#34; width=&#34;100%&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;
&lt;/li&gt;

&lt;li&gt;&lt;p&gt;収集した文献の書誌事項はhogefuga-reference.bibにbibtex fileとしてまとめられているが，その中身は以下のような情報の集積である（下の例ではabstractなどは省略している）．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;@article{Rothwell:2018aa,

  Author = {Rothwell, Peter M and Cook, Nancy R and Gaziano, J Michael and Price, Jacqueline F and Belch, Jill F F and Roncaglioni, Maria Carla and Morimoto, Takeshi and Mehta, Ziyah},
  Date-Added = {2018-08-03 22:46:26 +0900},
  Date-Modified = {2018-08-03 22:46:26 +0900},
  Doi = {10.1016/S0140-6736(18)31133-4},
  Journal = {Lancet},
  Journal-Full = {Lancet (London, England)},
  Month = {Jul},
  Pmid = {30017552},
  Pst = {aheadofprint},
  Title = {Effects of aspirin on risks of vascular events and cancer according to bodyweight and dose: analysis of individual patient data from randomised trials},
  Year = {2018},
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;bibtexなので，前述のごとく，文献の引用，引用スタイルの設定，文献リストの作成，文献リストのスタイルの設定などをすべて自動化できる．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Emacsのorg-modeと組み合わせて，どのように文献の引用を自動化するかについては次回の記事にまとめる．&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>beamerでスライド原稿用pdfを作成する（その3）動画が走るスライド原稿を作る（media9に関する追記）</title>
      <link>/post/beamer_movie2/</link>
      <pubDate>Sun, 26 Aug 2018 00:00:00 +0900</pubDate>
      <guid>/post/beamer_movie2/</guid>
      <description>

&lt;p&gt;前回のポストを書いた後に，念のために調べてみると，どうやら，media9なるものが，いまやpdfに動画を埋め込むために普通に使われているようだということが判明してしまった！う〜む，勉強不足を痛感する．遅れを取り返すべく，早速やってみたので，それを追加報告とする．&lt;/p&gt;

&lt;p&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;
HAHAHUGOSHORTCODE-TOC0-HBHB&lt;/p&gt;

&lt;h2 id=&#34;media9&#34;&gt;media9&lt;/h2&gt;

&lt;p&gt;media9はtexlive2018に含まれており，特に別途インストールする必要はなかった．media9については様々な情報があったが，多くはWindowsやLinuxに関してであり，そのままコピペして動くような極楽情報はなかなか見つからなかった．やはり，餅は餅屋で，OS X TeXにそのものズバリの情報があった．それが参考サイト５である．&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;参考サイト１：&lt;a href=&#34;https://texwiki.texjp.org/?media9&#34; target=&#34;_blank&#34;&gt;TeXWiki media9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考サイト２：&lt;a href=&#34;https://blog.tokor.org/2016/06/04/TeXでプレゼン-LaTeX-Beamerを使う人のためのTips集/&#34; target=&#34;_blank&#34;&gt;TeXでプレゼン - LaTeX Beamerを使う人のためのTips集&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考サイト３：&lt;a href=&#34;https://www.youtube.com/watch?v=HHzcrP27I08&#34; target=&#34;_blank&#34;&gt;How to embed video files in a PDF using LaTeX (a media9/beamer example)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考サイト４：&lt;a href=&#34;http://empitsu.hatenablog.com/entry/2012/11/02/182722&#34; target=&#34;_blank&#34;&gt;Beamer で PDF ファイルに動画を埋め込む&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考サイト５：&lt;a href=&#34;http://tug.org/pipermail/macostex-archives/2014-July/052673.html&#34; target=&#34;_blank&#34;&gt;media9 problems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;beamerで動画が走るスライド原稿を作る-media9版&#34;&gt;beamerで動画が走るスライド原稿を作る（media9版）&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;同一directoryにhogefuga.movがあるとすれば，以下のように書けば良い&lt;/li&gt;

&lt;li&gt;&lt;p&gt;preambleに，\usepackage{media9}を忘れずに追加しておく．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;\newcommand{\showmovie}[1]{\includemedia[
  activate=pageopen,
  deactivate=pageclose,
  width=110mm, height=72mm,
  addresource=#1,
  flashvars={
    src=#1
    &amp;amp;loop=true
    &amp;amp;autoPlay=false
  }
  ]{}{StrobeMediaPlayback.swf}
}

\begin{frame}
  \frametitle{hogefugaの動画}
  \centering
  \showmovie{hogefuga.mov}
\end{frame}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;110mmと72mmの数値はフレーム内の動画の収まり具合により適宜調整する．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;loopは，ループ再生するかどうか&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;autoplayは自動再生するかどうか&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;media9を使用したときの利点&#34;&gt;media9を使用したときの利点&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;なんと言ってもべた書きよりもelegant!&lt;/li&gt;
&lt;li&gt;スライドを開けたときに，何もしなくても動画の静止画が映るので，前回のやり方のように背景をべた書きしなくて良い．&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;media9を使用したときの欠点&#34;&gt;media9を使用したときの欠点&lt;/h2&gt;

&lt;p&gt;もう完全にmedia9に乗り換えるつもりでいたが，以下に述べるようにいくつか欠点もあることが判明した．&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;media9はpdf自体に動画を埋め込むようである．したがって，200MBの動画を走らせるとすると，pdf自体が200MB以上の大きさになってしまう．&lt;/li&gt;
&lt;li&gt;それだけでなく，200MB程度の動画になると，途中で固まってしまう！これでは使い物にならない．&lt;/li&gt;
&lt;li&gt;一方，前回記事のべた書き方式だと，pdf自体に動画を埋め込まないので，pdfは大きくならないし，動画指定のパスは効くし，200MBだろうともっと大きかろうと動画はガンガン動く．&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;結論&#34;&gt;結論&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;容量の小さな動画であれば，media9でも十分であろう．&lt;/li&gt;
&lt;li&gt;私のように，容量の大きな動画を使用するような場合は，べた書きを使用するほうが良いであろう．&lt;/li&gt;
&lt;li&gt;ということで，結局，元の木阿弥に戻ることとなった．&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>beamerでスライド原稿用pdfを作成する（その2）動画が走るスライド原稿を作る</title>
      <link>/post/beamer_movie/</link>
      <pubDate>Sat, 25 Aug 2018 00:00:00 +0900</pubDate>
      <guid>/post/beamer_movie/</guid>
      <description>

&lt;p&gt;実は，同じような内容について2010年に，&lt;a href=&#34;https://oku.edu.mie-u.ac.jp/tex/mod/forum/discuss.php?d=399#p2100&#34; target=&#34;_blank&#34;&gt;TeX QA&lt;/a&gt; に投稿しているが，その後現在に至るまで使い続けることができており，一応，こちらでもまとめておくことにした．&lt;/p&gt;

&lt;h2 id=&#34;beamerで動画が走るスライド原稿を作る&#34;&gt;beamerで動画が走るスライド原稿を作る&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;前述した ，&lt;a href=&#34;https://oku.edu.mie-u.ac.jp/tex/mod/forum/discuss.php?d=399#p2100&#34; target=&#34;_blank&#34;&gt;TeX QA&lt;/a&gt; に経緯は投稿してあるので，詳細はそちらを読んでいただきたい．&lt;/li&gt;

&lt;li&gt;&lt;p&gt;参考にしたのは，Adobeのpdfのマニュアル（DVI specials for PDF generation） &lt;a href=&#34;https://www.tug.org/TUGboat/tb30-1/tb94cho.pdf&#34; target=&#34;_blank&#34;&gt;https://www.tug.org/TUGboat/tb30-1/tb94cho.pdf&lt;/a&gt; の以下の部分&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;3 Annotations

An annotation is considered as an object with a location on a page. The type of the object is given by the value of the key `/Subtype&#39;, for instance, `/Text&#39;, `/Link&#39;, `/Sound&#39;, `/Movie&#39;, etc. (See [1, p. 615] for the list of all annotation types.) The location is given by an array object associated to the key `/Rect&#39;. DVIPDFM(x) provides the following special command for annotations............

 The following example shows a movie annotation that enables us to run the movie file ‘mymovie.avi’ inside a PDF viewer program.

 \special{pdf:ann bbox 0 0 360 180 &amp;lt;&amp;lt;
 /Subtype /Movie /Border [1 0 0]
 /T (My Movie) /Movie &amp;lt;&amp;lt;
 /F (mymovie.avi) /Aspect [720 360]
 /Poster true &amp;gt;&amp;gt;
 /A &amp;lt;&amp;lt; /ShowControls false &amp;gt;&amp;gt; &amp;gt;&amp;gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;アスペクト比やコントロールバーの有無，リピートするかどうかなども指示できる（下記参照）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;mymovie.aviのところに動かしたい動画を記入（パスも効く）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;私の作成したものは読んでいただければおわかりのように，非常にダサいベタ書きである．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;最近の書き方は以下の通りで，もっぱら，mov形式の画像を使用している．コンテナがaviやwmvだと動かないが，Mac以外でどうなるのかは不明．そういえば，Windowsで試したことはなかった&amp;hellip;..&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;{
    \usebackgroundtemplate{\put(20, -265){\includegraphics[scale=0.45]{/Data/.../..../Figures/hogefuga.pdf}}}
    \begin{frame}
    \frametitle{hogefugaの対策}
    \special{pdf:ann bbox -10 -130 320 90 &amp;lt;&amp;lt;
             /Subtype /Movie /Border [0 0 1]
             /T (My Movie) /Movie &amp;lt;&amp;lt;
             /F (/Data/.../hogefuga.mov)
             %/Aspect [720 480]
             /Aspect [640 480]
             /Poster false &amp;gt;&amp;gt;
             /A &amp;lt;&amp;lt; /ShowControls true /Mode /Repeat &amp;gt;&amp;gt; &amp;gt;&amp;gt;}
    \end{frame}
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;\usebackgroundtemplateの部分には動画のキャプチャー画像を貼り付けておく．なにもないと，動画が動き出す前の画面が空白になってしまう（もっと良い方法があれば，どなたかご教示ください）．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;\putで背景画像（キャプチャー画像）の位置を直接指定し，\includegraphicsのscaleで倍率を指定して動画の大きさに合わせている．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;これで，画像をクリックすると（ほぼ）同じ大きさの動画が（ほぼ）同じ位置で動くようになる&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;動画の大きさはbboxで，かぶせる静止画の大きさはscaleで調整する．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;プレゼンテーションにskimを使うと動画が動かないので注意．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;動画は同一directoryにある必要はなく，パスで指定すれば良い&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;動画自体はpdfの中に埋め込まれないので，pdfの容量がむやみに大きくならないという利点がある．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Adobe Acrobat Readerでプレゼンすれば，動画は動くし，音もでる．コントロールバーにより早送りなども可能．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;最初にpdfで動画をクリックすると「セキュリティ上の問題．．．」というメッセージが表示される．この横にあるオプションボタンをクリックして，信頼するを選択すれば，動画が動くようになる．&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>LaTeXをインストールし，texファイルが変更されると，自動的にcompileしてskimでのpdfも自動で更新されるようにする（2018年9月1日追記）</title>
      <link>/post/latexmk/</link>
      <pubDate>Sun, 19 Aug 2018 00:00:00 +0900</pubDate>
      <guid>/post/latexmk/</guid>
      <description>

&lt;p&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;
HAHAHUGOSHORTCODE-TOC0-HBHB&lt;/p&gt;

&lt;h2 id=&#34;tex-live-2018のインストール&#34;&gt;TeX Live 2018のインストール&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;参考サイト１：&lt;a href=&#34;https://texwiki.texjp.org/?TeX%20Live&#34; target=&#34;_blank&#34;&gt;TeX Wiki TeX Live&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考サイト２：&lt;a href=&#34;https://texwiki.texjp.org/?TeX%20Live%2FMac&#34; target=&#34;_blank&#34;&gt;TeX Wiki TeX LiveMac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考サイト３：&lt;a href=&#34;http://www.tug.org/mactex/&#34; target=&#34;_blank&#34;&gt;The MacTeX-2018 Distribution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;上記サイトを参考にTeX Live 2018もしくはMacTeX-2018をインストールする．&lt;/li&gt;
&lt;li&gt;これでスライド作成ソフトであるbeamerも一緒にインストールされる．&lt;/li&gt;
&lt;li&gt;beamerに固有の設定は特に必要なし．&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;tex-live-2018のインストール-2018年9月1日追記&#34;&gt;TeX Live 2018のインストール（2018年9月1日追記）&lt;/h2&gt;

&lt;p&gt;大事なことを２つ忘れていたので追記する．&lt;/p&gt;

&lt;h3 id=&#34;ヒラギノフォントの埋め込みなど&#34;&gt;ヒラギノフォントの埋め込みなど&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;参考サイト：&lt;a href=&#34;http://doratex.hatenablog.jp/entry/20180501/1525144736&#34; target=&#34;_blank&#34;&gt;MacTeX 2018のインストール&amp;amp;日本語環境構築法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;こんなところを読んでいないで，直ちに上記のサイトに飛んでいただきたい．&lt;/li&gt;
&lt;li&gt;マックユーザーにとっての最大の問題点は &lt;strong&gt;「macos標準添付のヒラギノフォントなど商用フォントに関する設定ファイル群が，TeX LiveからTLContriに移動になった」&lt;/strong&gt; ということである．この問題に対する対応方法は，すべて上記のサイトに記載されているので，そのとおりにすれば良い．実にありがたい．&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;インストール後のパスの修正-symbolic-linkを張る&#34;&gt;インストール後のパスの修正（symbolic linkを張る）&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;参考サイト：&lt;a href=&#34;https://texwiki.texjp.org/?TeX%20Live%2FMac&#34; target=&#34;_blank&#34;&gt;TeX Wiki TeX LiveMac&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;MacTeX 2018を普通にインストールすると，/usr/local/texlive/2018/bin/x86_64-darwin/bibtexというふうにbinの下にx86_64-darwinというdirectoryが入って，tex関連のコマンドのパスが上手く通らなくなる．そこで，上記の&lt;a href=&#34;https://texwiki.texjp.org/?TeX%20Live%2FMac&#34; target=&#34;_blank&#34;&gt;TeX Wiki TeX LiveMac&lt;/a&gt;に書いてあるように，/usr/local/binディレクトリの下にsymbolic linkを張る．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ sudo /usr/local/texlive/????/bin/*/tlmgr path add
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;上記でうまくいかないときは下記のように具体的なディレクトリ名を指定する．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ sudo /usr/local/texlive/2018/bin/x86_64-darwin/tlmgr path add
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;auctexのインストールと設定&#34;&gt;auctexのインストールと設定&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;latex文書を扱うなら，Emacsのパッケージであるauctexが最強（according to 独断と偏見）&lt;/li&gt;
&lt;li&gt;preludeをインストールした時点で，auctexもインストールされる．&lt;/li&gt;
&lt;li&gt;auctexの設定などについては以下を参照（手抜き&amp;hellip;.. (^^;;; ）

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/auctex/&#34; target=&#34;_blank&#34;&gt;AUCTEX – Sophisticated document creation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://texwiki.texjp.org/?AUCTeX&#34; target=&#34;_blank&#34;&gt;TeX Wiki AUCTeX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mytexpert.osdn.jp/index.php?Emacs/AUCTeX&#34; target=&#34;_blank&#34;&gt;Emacs/AUCTeX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://skalldan.wordpress.com/2011/07/20/auctex-の設定と便利な機能/&#34; target=&#34;_blank&#34;&gt;AUCTeX の設定と便利な機能&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;しかし，org-modeを使うようになってからは直接latex文書を打つことはめっきり少なくなってしまった．それでも，学会発表用のスライドなどはlatexを直接打って，beamer文書を作成し，pdf原稿に変換している．&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;latexmk&#34;&gt;latexmk&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Emacsでbeamerを使って，スライド原稿などを作成していると，C-c C-cするたびにtex文書がcompileされてpdf原稿が出来上がるのを待たなければならず，この待ち時間が結構辛い．そこで，tex ファイルの変更が保存されるたびに自動で裏でlatexmkがcompileしてくれるようにする．latexmkを使う．&lt;/li&gt;
&lt;li&gt;参考サイト：&lt;a href=&#34;https://texwiki.texjp.org/?Latexmk&#34; target=&#34;_blank&#34;&gt;TeX Wiki Latexmk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;texlive2018, MacTeXに入っているので，これらを入れていれば別途インストールする必要なし．&lt;/li&gt;

&lt;li&gt;&lt;p&gt;~/.latexmkrcの中に以下のように記述する（ちなみに私はxelatexを使用している）&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;$pdflatex = &#39;xelatex -interaction=nonstopmode -synctex=1 %O %S&#39;;
$pdf_mode = 1;
$postscript_mode = $dvi_mode = 0;
$pdf_previewer  = &#39;open -a Skim&#39;;
$preview_continuous_mode = 1;  # equivalent to -pvc
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;実際の作業&#34;&gt;実際の作業&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;上記のようにセットアップしていることとする．&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ターミナルで，texファイルが有るdirectoryに移動し，&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;latexmk -pvc -pdf -view=none document.tex
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;これで，texファイルへの変更を保存すると自動でコンパイルされて，設定にもよるが，skimで開いているpdfファイルも更新される．&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;xelatexについて&#34;&gt;XeLaTeXについて&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;以下を参照されたい．特に最初にあげたZRさんの文書は必読！

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://zrbabbler.sp.land.to/xelatex.html&#34; target=&#34;_blank&#34;&gt;XeLaTeX で日本語する件について&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://texwiki.texjp.org/?XeTeX&#34; target=&#34;_blank&#34;&gt;TeXWiki XeTeX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://suzusime-log.hatenablog.jp/entry/2017/04/15/210327&#34; target=&#34;_blank&#34;&gt;XeLaTeXだとかな混植が簡単にできて最高だという話&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>

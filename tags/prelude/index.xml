<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>prelude | A perfect autumn day</title>
    <link>/tags/prelude/</link>
      <atom:link href="/tags/prelude/index.xml" rel="self" type="application/rss+xml" />
    <description>prelude</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2019</copyright><lastBuildDate>Sat, 18 Aug 2018 00:00:00 +0900</lastBuildDate>
    <image>
      <url>/img/icon-192.png</url>
      <title>prelude</title>
      <link>/tags/prelude/</link>
    </image>
    
    <item>
      <title>Emacsの設定（その3）ようやくinit.orgの記述: 日本語の設定，inline-patchの設定など</title>
      <link>/post/japanese_setup/</link>
      <pubDate>Sat, 18 Aug 2018 00:00:00 +0900</pubDate>
      <guid>/post/japanese_setup/</guid>
      <description>

&lt;p&gt;ようやく，ここからinit.orgの具体的な記述になる．&lt;/p&gt;

&lt;p&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt;
HAHAHUGOSHORTCODE-TOC0-HBHB&lt;/p&gt;

&lt;h2 id=&#34;coding-systemの設定&#34;&gt;Coding systemの設定&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;まずは，coding systemの設定，つまり，日本語の設定，日本語フォントの設定から&lt;/li&gt;

&lt;li&gt;&lt;p&gt;init.orgに以下のように書き込む&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;​* Coding System Environment
** 言語を日本語にする
   #+BEGIN_SRC lisp
   (set-language-environment &#39;Japanese)
   #+END_SRC
** 極力UTF-8とする
   #+BEGIN_SRC lisp
     (prefer-coding-system &#39;utf-8)
   #+END_SRC
** 日本語フォントをヒラギノにする
​   - 日本語のサイズを指定しないと動的にサイズを変えられるようになる
​   - 奥村先生のサイト参照 https://oku.edu.mie-u.ac.jp/~okumura/macosx/
   #+BEGIN_SRC lisp
     (when (or (eq window-system &#39;mac) (eq window-system &#39;ns))
       (set-face-attribute &#39;default nil
                           :family &amp;quot;Menlo&amp;quot;
                           :height 180) ;; 18pt
       (set-fontset-font nil &#39;japanese-jisx0208
                         (font-spec :family &amp;quot;Hiragino Kaku Gothic ProN&amp;quot;))
       (setq face-font-rescale-alist
             &#39;((&amp;quot;.*Hiragino Kaku Gothic ProN.*&amp;quot; . 1.1))))
   #+END_SRC
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;これがEmacs起動時にorg-babel-load-fileにより変換されて下記のようなinit.elとなる．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(set-language-environment &#39;Japanese)

(prefer-coding-system &#39;utf-8)

(when (or (eq window-system &#39;mac) (eq window-system &#39;ns))
  (set-face-attribute &#39;default nil
                      :family &amp;quot;Menlo&amp;quot;
                      :height 180) ;; 18pt
  (set-fontset-font nil &#39;japanese-jisx0208
                    (font-spec :family &amp;quot;Hiragino Kaku Gothic ProN&amp;quot;))
  (setq face-font-rescale-alist
        &#39;((&amp;quot;.*Hiragino Kaku Gothic ProN.*&amp;quot; . 1.1))))
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;つまり，org-modeで書いたinit.orgでの解説はすべて除かれて，lispのみのcodeになってinit.elが生成される．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;この利点は，init.elの説明が実に書きやすい点にある（実際にはinit.orgに書くわけだが．．．）．org-modeはアウトライナーなので，階層構造も自由自在である．整理もしやすいし，後で順番を変えるのもCommand + arrow keyを使えば実に簡単である．&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;inline-patchの設定&#34;&gt;Inline-patchの設定&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;ついで，最も重要なinline-patchの設定&lt;/li&gt;
&lt;li&gt;参考：&lt;a href=&#34;http://keisanbutsuriya.hateblo.jp/entry/2016/04/10/115945&#34; target=&#34;_blank&#34;&gt;Macに最新バージョンのEmacsをインストール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考：&lt;a href=&#34;http://suzuki.tdiary.net/20160103.html&#34; target=&#34;_blank&#34;&gt;El Capitan での日本語入力時に Emacs 内のカーソル色を変更する&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;init.orgに以下のように書き込む．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;​* inline-patch on macosx
** ミニバッファ入力時に自動的に英語入力モードにする
​   - 参考：http://keisanbutsuriya.hateblo.jp/entry/2016/04/10/115945
   #+BEGIN_SRC lisp
     (when (functionp &#39;mac-auto-ascii-mode)  ;; ミニバッファに入力時、自動的に英語モード
       (mac-auto-ascii-mode 1))
   #+END_SRC
** 日本語か英語かで，カーソルの色を変える．
​   - 参考１：http://keisanbutsuriya.hateblo.jp/entry/2016/04/10/115945
​   - 参考２：http://suzuki.tdiary.net/20160103.html
   #+BEGIN_SRC lisp
     (when (fboundp &#39;mac-input-source)
       (defun my-mac-selected-keyboard-input-source-chage-function ()
         (let ((mac-input-source (mac-input-source)))
           (set-cursor-color
                                             ; (if (string-match &amp;quot;com.apple.inputmethod.Kotoeri.Roman&amp;quot; mac-input-source)
            (if (string-match &amp;quot;com.google.inputmethod.Japanese.Roman&amp;quot; mac-input-source)
                &amp;quot;#91C3FF&amp;quot; &amp;quot;#FF9300&amp;quot;))))
       (add-hook &#39;mac-selected-keyboard-input-source-change-hook
                 &#39;my-mac-selected-keyboard-input-source-chage-function))
   #+END_SRC
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;これがEmacsの起動時に，org-babel-load-fileによって，下記のようにcodeだけ抜き出されて，init.elに書き込まれる．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(when (functionp &#39;mac-auto-ascii-mode)  ;; ミニバッファに入力時、自動的に英語モード
  (mac-auto-ascii-mode 1))

(when (fboundp &#39;mac-input-source)
  (defun my-mac-selected-keyboard-input-source-chage-function ()
    (let ((mac-input-source (mac-input-source)))
      (set-cursor-color
                                        ; (if (string-match &amp;quot;com.apple.inputmethod.Kotoeri.Roman&amp;quot; mac-input-source)
       (if (string-match &amp;quot;com.google.inputmethod.Japanese.Roman&amp;quot; mac-input-source)
           &amp;quot;#91C3FF&amp;quot; &amp;quot;#FF9300&amp;quot;))))
  (add-hook &#39;mac-selected-keyboard-input-source-change-hook
            &#39;my-mac-selected-keyboard-input-source-chage-function))
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;これで日本語入力中であっても，M-xなどでミニバッファ入力時に自動的に英語入力モードになってくれる．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ついでに行った日本語か英語かでカーソルの色が変わる設定はわりに有用だが，ときに色が変わらないことがあるが，気にしないことにしている．&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Emacsの設定（その1）Preludeの導入（2018年10月9日修正，2019年6月1日追記）</title>
      <link>/post/prelude_install/</link>
      <pubDate>Wed, 15 Aug 2018 00:00:00 +0900</pubDate>
      <guid>/post/prelude_install/</guid>
      <description>

&lt;p&gt;昔はいろいろイチからinit.elを設定したものだけど，今は最初からほぼ全部やってくれる設定集がある．&lt;/p&gt;

&lt;h2 id=&#34;preludeとは&#34;&gt;Preludeとは&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Emacs初期設定集の一種．他にもいろいろあるようだが，これしか使ったことがないので．．．&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bbatsov/prelude&#34; target=&#34;_blank&#34;&gt;Prelude&lt;/a&gt; Githubはこちら&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;preludeのインストール&#34;&gt;Preludeのインストール&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;上記のGithubのFast Forwardに書いてあるように，macOSで既にgitとcurlとEmacsをインストールしていれば，下記のコマンドを打てば，Preludeがインストールされる．念のために，古い.emacs.dはどこかに退避させておく（名前を変えて保存されるようになってはいるが心配性なもんで）．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ curl -L https://git.io/epre | sh
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;インストール終了後にEmacsを再起動すると，勝手にもの凄い勢いでどんどん各種パッケージをダウンロードしてインストールしてくれる．&lt;del&gt;auctexなどもインストールされるので，LaTeXも使えるようになる．素晴らしい！&lt;/del&gt; &lt;strong&gt;（2018年10月9日修正）&lt;/strong&gt; デフォルトのままではこうならない．下記のように設定する必要あり．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;prelude-modules.elを見て必要なmodulesがロードされるようにコメントアウトを外す．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(require &#39;prelude-helm) ;; Interface for narrowing and search
(require &#39;prelude-helm-everywhere) ;; Enable Helm everywhere
..................
(require &#39;prelude-latex)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;helmにすっかり慣らされてしまったのでこのあたりは外している．prelude-latexのコメントアウトを外すことにより，次回にEmacsを立ち上げるときに &lt;strong&gt;auctex&lt;/strong&gt; がインストールされる．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;preludeのdefaultの設定は，ほぼ満足すべきものだが，ひとつだけ，prelude-auto-saveが邪魔である．これは，他のbufferに移動したり，他のアプリを使用したりするたびに自動で保存される機能であるが，非常に鬱陶しい．M-x customize からprelude-auto-saveを検索し，offにする．custom.elに書き込まれる．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;super-save&lt;/strong&gt; について（ &lt;strong&gt;2019年6月1日追記&lt;/strong&gt; ）：この記事を書いてからすぐに気がついたのだが，現在のpreludeはsuper-saveがdefaultで設定されるので，こちらもoffにしないと自動保存が行われてしまう．これは好みの問題だとは思うが，私は嫌いなのでoffにしている．遅まきながら追記しておく．設定の変更は上述のとおりで，M-x customize からsuper-saveを検索し，offにする．下図を参考にしていただきたい．&lt;/p&gt;







&lt;figure&gt;

  &lt;a data-fancybox=&#34;&#34; href=&#34;/img/Super-save.jpg&#34; &gt;

&lt;img src=&#34;/img/Super-save.jpg&#34; width=&#34;100%&#34; &gt;
&lt;/a&gt;

&lt;/figure&gt;
&lt;/li&gt;

&lt;li&gt;&lt;p&gt;個人の設定は，~/.emacs.d/personal/init.elに書き込む．これは，org-modeを使って設定するのが良い．まずorg-modeについての記事を書いたあとにinit.orgについて書く予定．&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>

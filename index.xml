<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A perfect autumn day on A perfect autumn day</title>
    <link>/</link>
    <description>Recent content in A perfect autumn day on A perfect autumn day</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 19 Aug 2018 00:00:00 +0900</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>texファイルが変更されると，自動的にcompileしてskimでのpdfも自動で更新されるようにする．</title>
      <link>/post/latexmk/</link>
      <pubDate>Sun, 19 Aug 2018 00:00:00 +0900</pubDate>
      
      <guid>/post/latexmk/</guid>
      <description>

&lt;p&gt;Emacsでbeamerを使って，スライド原稿などを作成していると，C-c C-cするたびにtex文書がcompileされてpdf原稿が出来上がるのを待たなければならず，この待ち時間が結構辛い．そこで，tex ファイルの変更が保存されるたびに自動で裏でlatexmkがcompileしてくれるようにする．latexmkを使う．&lt;/p&gt;

&lt;h2 id=&#34;latexmk&#34;&gt;latexmk&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;参考サイト：&lt;a href=&#34;https://texwiki.texjp.org/?Latexmk&#34; target=&#34;_blank&#34;&gt;TeX Wiki Latexmk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;texlive2018, MacTeXに入っているので，これらを入れていれば別途インストールする必要なし．&lt;/li&gt;

&lt;li&gt;&lt;p&gt;~/.latexmkrcの中に以下のように記述する&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;$pdflatex = &#39;xelatex -interaction=nonstopmode -synctex=1 %O %S&#39;;
$pdf_mode = 1;
$postscript_mode = $dvi_mode = 0;
$pdf_previewer  = &#39;open -a Skim&#39;;
$preview_continuous_mode = 1;  # equivalent to -pvc
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;実際の作業&#34;&gt;実際の作業&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;上記のようにセットアップしていることとする．&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ターミナルで，texファイルが有るdirectoryに移動し，&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;latexmk -pvc -pdf -view=none document.tex
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;これで，texファイルへの変更を保存すると自動でコンパイルされて，設定にもよるが，skimで開いているpdfファイルも更新される．&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Emacsの設定（その3）ようやくinit.orgの記述: 日本語の設定，inline-patchの設定など</title>
      <link>/post/japanese_setup/</link>
      <pubDate>Sat, 18 Aug 2018 00:00:00 +0900</pubDate>
      
      <guid>/post/japanese_setup/</guid>
      <description>

&lt;p&gt;ようやく，ここからinit.orgの具体的な記述になる．&lt;/p&gt;

&lt;h2 id=&#34;coding-systemの設定&#34;&gt;Coding systemの設定&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;まずは，coding systemの設定，つまり，日本語の設定，日本語フォントの設定から&lt;/li&gt;

&lt;li&gt;&lt;p&gt;init.orgに以下のように書き込む&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;​* Coding System Environment
** 言語を日本語にする
   #+BEGIN_SRC lisp
   (set-language-environment &#39;Japanese)
   #+END_SRC
** 極力UTF-8とする
   #+BEGIN_SRC lisp
     (prefer-coding-system &#39;utf-8)
   #+END_SRC
** 日本語フォントをヒラギノにする
​   - 日本語のサイズを指定しないと動的にサイズを変えられるようになる
​   - 奥村先生のサイト参照 https://oku.edu.mie-u.ac.jp/~okumura/macosx/
   #+BEGIN_SRC lisp
     (when (or (eq window-system &#39;mac) (eq window-system &#39;ns))
       (set-face-attribute &#39;default nil
                           :family &amp;quot;Menlo&amp;quot;
                           :height 180) ;; 18pt
       (set-fontset-font nil &#39;japanese-jisx0208
                         (font-spec :family &amp;quot;Hiragino Kaku Gothic ProN&amp;quot;))
       (setq face-font-rescale-alist
             &#39;((&amp;quot;.*Hiragino Kaku Gothic ProN.*&amp;quot; . 1.1))))
   #+END_SRC
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;これがEmacs起動時にorg-babel-load-fileにより変換されて下記のようなinit.elとなる．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(set-language-environment &#39;Japanese)

(prefer-coding-system &#39;utf-8)

(when (or (eq window-system &#39;mac) (eq window-system &#39;ns))
  (set-face-attribute &#39;default nil
                      :family &amp;quot;Menlo&amp;quot;
                      :height 180) ;; 18pt
  (set-fontset-font nil &#39;japanese-jisx0208
                    (font-spec :family &amp;quot;Hiragino Kaku Gothic ProN&amp;quot;))
  (setq face-font-rescale-alist
        &#39;((&amp;quot;.*Hiragino Kaku Gothic ProN.*&amp;quot; . 1.1))))
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;つまり，org-modeで書いたinit.orgでの解説はすべて除かれて，lispのみのcodeになってinit.elが生成される．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;この利点は，init.elの説明が実に書きやすい点にある（実際にはinit.orgに書くわけだが．．．）．org-modeはアウトライナーなので，階層構造も自由自在である．整理もしやすいし，後で順番を変えるのもCommand + arrow keyを使えば実に簡単である．&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;inline-patchの設定&#34;&gt;Inline-patchの設定&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;ついで，最も重要なinline-patchの設定&lt;/li&gt;
&lt;li&gt;参考：&lt;a href=&#34;http://keisanbutsuriya.hateblo.jp/entry/2016/04/10/115945&#34; target=&#34;_blank&#34;&gt;http://keisanbutsuriya.hateblo.jp/entry/2016/04/10/115945&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考：&lt;a href=&#34;http://keisanbutsuriya.hateblo.jp/entry/2016/04/10/115945&#34; target=&#34;_blank&#34;&gt;http://keisanbutsuriya.hateblo.jp/entry/2016/04/10/115945&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考：&lt;a href=&#34;http://suzuki.tdiary.net/20160103.html&#34; target=&#34;_blank&#34;&gt;http://suzuki.tdiary.net/20160103.html&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;init.orgに以下のように書き込む．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;​* inline-patch on macosx
** ミニバッファ入力時に自動的に英語入力モードにする
​   - 参考：http://keisanbutsuriya.hateblo.jp/entry/2016/04/10/115945
   #+BEGIN_SRC lisp
     (when (functionp &#39;mac-auto-ascii-mode)  ;; ミニバッファに入力時、自動的に英語モード
       (mac-auto-ascii-mode 1))
   #+END_SRC
** 日本語か英語かで，カーソルの色を変える．
​   - 参考１：http://keisanbutsuriya.hateblo.jp/entry/2016/04/10/115945
​   - 参考２：http://suzuki.tdiary.net/20160103.html
   #+BEGIN_SRC lisp
     (when (fboundp &#39;mac-input-source)
       (defun my-mac-selected-keyboard-input-source-chage-function ()
         (let ((mac-input-source (mac-input-source)))
           (set-cursor-color
                                             ; (if (string-match &amp;quot;com.apple.inputmethod.Kotoeri.Roman&amp;quot; mac-input-source)
            (if (string-match &amp;quot;com.google.inputmethod.Japanese.Roman&amp;quot; mac-input-source)
                &amp;quot;#91C3FF&amp;quot; &amp;quot;#FF9300&amp;quot;))))
       (add-hook &#39;mac-selected-keyboard-input-source-change-hook
                 &#39;my-mac-selected-keyboard-input-source-chage-function))
   #+END_SRC
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;これがEmacsの起動時に，org-babel-load-fileによって，下記のようにcodeだけ抜き出されて，init.elに書き込まれる．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(when (functionp &#39;mac-auto-ascii-mode)  ;; ミニバッファに入力時、自動的に英語モード
  (mac-auto-ascii-mode 1))

(when (fboundp &#39;mac-input-source)
  (defun my-mac-selected-keyboard-input-source-chage-function ()
    (let ((mac-input-source (mac-input-source)))
      (set-cursor-color
                                        ; (if (string-match &amp;quot;com.apple.inputmethod.Kotoeri.Roman&amp;quot; mac-input-source)
       (if (string-match &amp;quot;com.google.inputmethod.Japanese.Roman&amp;quot; mac-input-source)
           &amp;quot;#91C3FF&amp;quot; &amp;quot;#FF9300&amp;quot;))))
  (add-hook &#39;mac-selected-keyboard-input-source-change-hook
            &#39;my-mac-selected-keyboard-input-source-chage-function))
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;これで日本語入力中であっても，M-xなどでミニバッファ入力時に自動的に英語入力モードになってくれる．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ついでに行った日本語か英語かでカーソルの色が変わる設定はわりに有用だが，ときに色が変わらないことあり．&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Emacsの設定（その2）設定ファイル（init.el）をorg-modeで管理する</title>
      <link>/post/init_org/</link>
      <pubDate>Fri, 17 Aug 2018 00:00:00 +0900</pubDate>
      
      <guid>/post/init_org/</guid>
      <description>

&lt;p&gt;自分のinit.elを見てると嫌になってくる．なんとかしようと弄り回すが，結局，訳わからんコードが山のように残ったまま．これをなんとかしようと，以前から気になっていたorg-modeでinit.elを管理するという方法を試してみた．まず，参考にしたサイトを最初にまとめておくので，そちらを見たほうが良いかもしれない．&lt;/p&gt;

&lt;h2 id=&#34;参考サイト&#34;&gt;参考サイト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.lambda-consulting.jp/2015/11/20/article/&#34; target=&#34;_blank&#34;&gt;俺、ちゃんと全部管理してます（org-modeでinit.elを管理する）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://futurismo.biz/archives/6057/&#34; target=&#34;_blank&#34;&gt;babel-loader:org-mode で init.el を管理する方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://uwabami.junkhub.org/log/?date=20111213&#34; target=&#34;_blank&#34;&gt;平衡点(2011-12-13)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ameblo.jp/concello/entry-10786074455.html&#34; target=&#34;_blank&#34;&gt;ORG-Babel + init.el = ?? | くらいまーず　はい&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://funwithemacs.wordpress.com/2013/04/21/prelude-init-el-org-babel/&#34; target=&#34;_blank&#34;&gt;Prelude init.el &amp;amp; org-babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;preludeを使いながら-init-dot-orgから個人用のinit-dot-elを自動作成させてemacsを設定する方法&#34;&gt;Preludeを使いながら，init.orgから個人用のinit.elを自動作成させてEmacsを設定する方法&lt;/h2&gt;

&lt;h3 id=&#34;基本方針&#34;&gt;基本方針&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;個人用の設定内容は，~/.emacs.d/personal/init.orgに書き込む．&lt;/li&gt;
&lt;li&gt;起動時にEmacsはinit.orgを解釈できないので，init.elにはそれを解釈するように書き込む．&lt;/li&gt;
&lt;li&gt;具体的には，init.elで，(require &amp;lsquo;org)した後にorg-babel-load-fileでinit.orgを読み込む．&lt;/li&gt;
&lt;li&gt;しかし，Preludeを導入しているので，そのまま~/.emacs.dにinit.elを書き込むわけにはいかず，少し工夫する．&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;preludeの導入&#34;&gt;Preludeの導入&lt;/h3&gt;

&lt;p&gt;前回のポスト（&lt;a href=&#34;../prelude_install&#34;&gt;Emacsの設定（その1）Preludeの導入&lt;/a&gt;）を参考　&lt;/p&gt;

&lt;h3 id=&#34;emac-init-dot-elの作成&#34;&gt;emac-init.elの作成&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;~/.emacs.d/personal/emacs-init.elというファイルを作成し，下記のように書き込む&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(require &#39;org)
(defvar my-config-dir (concat user-emacs-directory &amp;quot;personal/&amp;quot;))
(org-babel-load-file
 (expand-file-name &amp;quot;init.org&amp;quot; my-config-dir))
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;工夫と言っても， &lt;strong&gt;init.elの名前のままではinit.orgからinit.elが生成されるときに衝突してしまう&lt;/strong&gt;  ので，違う名前（emacs-init.el）にしていることと，init.orgを~/.emacs.d/personal/に置くようにしているだけ．&lt;/li&gt;
&lt;li&gt;これでEmacsを起動すると，init.org内のcode blockだけを抜き出したinit.elが同じdirectory (personal)に作成される．&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;init-dot-orgの作成&#34;&gt;init.orgの作成&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;これでいよいよ肝心のinit.orgの作成を行う&lt;/li&gt;
&lt;li&gt;org-modeについては，今更説明不要であろう．とにかくすごいやつ．超高機能アウトラインメジャーモード．文書作成，このブログ作成など殆どのことをこれでやっている．&lt;/li&gt;
&lt;li&gt;具体的な内容は次回以降に記述予定だが，code blockの挿入は特筆すべき者であり，先に書いておく．．&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;code-blockの挿入&#34;&gt;Code blockの挿入&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.lambda-consulting.jp/2015/11/20/article/&#34; target=&#34;_blank&#34;&gt;俺、ちゃんと全部管理してます（org-modeでinit.elを管理する）&lt;/a&gt;で指摘されているとおり，とにかく便利．以下はほとんどそのままコピペしたような記述である．&lt;/li&gt;

&lt;li&gt;&lt;p&gt;org-modeで以下のようにする．（後述する設定が必要）&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;&amp;lt;l （ここで&amp;lt;TAB&amp;gt;すると．．．）
以下のように展開される
#+begin_src emacs-lisp

#+end_src
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;codeの記述&#34;&gt;Codeの記述&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;上記の#+begin_src emacs-lispと#+end_srcの間にemacs-lispで設定内容を書く．ここからが便利にできているところ．&lt;/li&gt;

&lt;li&gt;&lt;p&gt;code-blockの中にいるときに&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;C-c ;とする&lt;/li&gt;

&lt;li&gt;&lt;p&gt;当該のcode blockだけのバッファが表示される（下図の下のバッファ）&lt;/p&gt;

&lt;figure&gt;

&lt;img src=&#34;/img/CodeBlock_small.jpg&#34; width=&#34;100%&#34; /&gt;


&lt;/figure&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;この中はemacs-lisp modeでsyntaxも普通に効くので，普通にコードを書く．もちろん，括弧の対応もハイライトで表示される．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;C-c nとする&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;すると，インデントも綺麗に整えてくれる．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;満足したら，C-c ;で元のバッファに戻る．整形は綺麗なまま反映される．素晴らしい！&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;具体的なinit.orgの内容は次回のポスト以降に記述予定&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Emacsの設定（その1）Preludeの導入</title>
      <link>/post/prelude_install/</link>
      <pubDate>Wed, 15 Aug 2018 00:00:00 +0900</pubDate>
      
      <guid>/post/prelude_install/</guid>
      <description>

&lt;p&gt;昔はいろいろイチからinit.elを設定したものだけど，今は最初からほぼ全部やってくれる設定集がある．&lt;/p&gt;

&lt;h2 id=&#34;preludeとは&#34;&gt;Preludeとは&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Emacs初期設定集の一種．他にもいろいろあるようだが，これしか使ったことがないので．．．&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bbatsov/prelude&#34; target=&#34;_blank&#34;&gt;Prelude&lt;/a&gt; Githubはこちら&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;preludeのインストール&#34;&gt;Preludeのインストール&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;上記のGithubのFast Forwardに書いてあるように，macOSで既にgitとcurlとEmacsをインストールしていれば，下記のコマンドを打てば，Preludeがインストールされる．念のために，古い.emacs.dはどこかに退避させておく（名前を変えて保存されるようになって入るが心配性なもんで）．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ curl -L https://git.io/epre | sh
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;インストール終了後にEmacsを再起動すると，勝手にもの凄い勢いでどんどん各種パッケージをダウンロードしてインストールしてくれる．auctexなどもインストールされるので，LaTeXも使えるようになる．素晴らしい！&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;prelude-modules.elを見て必要なmodulesがロードされるようにコメントアウトを外す．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(require &#39;prelude-helm) ;; Interface for narrowing and search
(require &#39;prelude-helm-everywhere) ;; Enable Helm everywhere
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;helmにすっかり慣らされてしまったのでこのあたりは外している．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;preludeのdefaultの設定は，ほぼ満足すべきものだが，ひとつだけ，prelude-auto-saveが邪魔である．これは，他のbufferに移動したり，他のアプリを使用したりするたびに自動で保存される機能であるが，非常に鬱陶しい．M-x customize からprelude-auto-saveを検索し，offにする．custom.elに書き込まれる．&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;個人の設定は，~/.emacs.d/personal/init.elに書き込む．これは，org-modeを使って設定するのが良い．まずorg-modeについての記事を書いたあとにinit.orgについて書く予定．&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Emacsのインストール</title>
      <link>/post/emacs_install/</link>
      <pubDate>Tue, 14 Aug 2018 00:00:00 +0900</pubDate>
      
      <guid>/post/emacs_install/</guid>
      <description>&lt;p&gt;なにはともあれ，まずはEmacsのインストールから．様々な方法があるが，Mac userなので，ここでは&lt;a href=&#34;https://brew.sh/index%5Fja&#34; target=&#34;_blank&#34;&gt;Homebrew&lt;/a&gt;を使ってサクッとインストール．Homebrew自体のインストールはそちらのサイトを参照．&lt;/p&gt;

&lt;p&gt;Emacsで日本語を書いてると，M-xしたときに面倒なことになるので，&lt;a href=&#34;https://ja.wikipedia.org/wiki/インプット%5Fメソッド%5Fエディタ&#34; target=&#34;_blank&#34;&gt;Imput Method Editor (IME)&lt;/a&gt;用のパッチを当てる．既にパッチの当たっているYAMAMOTO Mitsuharu版のMac Port用のemacs-macがよい．railwaycatさんがHomebrewでインストールできるようにしてくれているので，これを使わせていただく（&lt;a href=&#34;https://github.com/railwaycat/homebrew-emacsmacport&#34; target=&#34;_blank&#34;&gt;Emacs Mac Port&lt;/a&gt;）．ありがたい．&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ brew tap railwaycat/emacsmacport
$ brew install emacs-mac --with-modern-icon --with-imagemagick
$ ln -s /usr/local/opt/emacs-mac/Emacs.app /Applications
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&amp;ndash;with-modern-iconを指定すると、新しいアイコンになる。&lt;/li&gt;
&lt;/ul&gt;

&lt;!--listend--&gt;

&lt;ul&gt;
&lt;li&gt;なお，他のoptionは以下のように打てば分かる．&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ brew tap railwaycat/emacsmacport
$ brew info emacs-mac
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/home/about/</link>
      <pubDate>Thu, 16 Aug 2018 20:30:16 +0900</pubDate>
      
      <guid>/home/about/</guid>
      <description>

&lt;h2 id=&#34;このサイトについて&#34;&gt;&lt;strong&gt;このサイトについて&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;フリーソフトで学会発表用のスライドを作ったり，論文を書いたりするのに役に立ちそうなことを，自分のためにまとめておく備忘録みたいなもの．最近とみに衰えてきた記憶力の補助になればいいな．．． 😄&lt;/p&gt;

&lt;p&gt;Emacsのorg-modeやLaTeXやbeamerに関する話が多くなりそう．．．&lt;/p&gt;

&lt;p&gt;殆どは先人の方々からの受け売りなので，できるだけ情報元も併記する．&lt;/p&gt;

&lt;h2 id=&#34;環境&#34;&gt;&lt;strong&gt;環境&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;MacBook Pro late 2016, Sierra&lt;/p&gt;

&lt;p&gt;GNU Emacs 26.1, texlive2018&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>Privacy Policy</title>
      <link>/privacy/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0900</pubDate>
      
      <guid>/privacy/</guid>
      <description>&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

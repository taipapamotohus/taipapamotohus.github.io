<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>autoexport | A perfect autumn day</title>
    <link>/tags/autoexport/</link>
      <atom:link href="/tags/autoexport/index.xml" rel="self" type="application/rss+xml" />
    <description>autoexport</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2020</copyright><lastBuildDate>Sun, 06 Jan 2019 00:00:00 +0900</lastBuildDate>
    <image>
      <url>/img/icon-192.png</url>
      <title>autoexport</title>
      <link>/tags/autoexport/</link>
    </image>
    
    <item>
      <title>Emacsのorg-modeを保存すると自動的にhtmlにexportされブラウザーが更新されるようにする</title>
      <link>/post/auto_html_export/</link>
      <pubDate>Sun, 06 Jan 2019 00:00:00 +0900</pubDate>
      <guid>/post/auto_html_export/</guid>
      <description>&lt;p&gt;org-modeで文書を書いていてhtmlにexportする際は，C-e h oとするわけだが，段々とこれが面倒になってくることがある．そこで，ネットを探ってみると，やはり，なんでも載ってるredditにhtml exportを自動化する関数の記事があった．&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#toggle-org-html-export-on-save&#34;&gt;toggle-org-html-export-on-save&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#directory%E3%81%AE%E5%86%85%E5%AE%B9%E3%81%8B%E3%82%99%E5%A4%89%E6%9B%B4%E3%81%95%E3%82%8C%E3%82%8B%E3%81%A8-%E8%87%AA%E5%8B%95%E3%81%A6%E3%82%99html%E3%82%92%E5%86%8D%E8%AA%AD%E8%BE%BC%E3%81%99%E3%82%8B&#34;&gt;directoryの内容が変更されると，自動でhtmlを再読込する．&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95&#34;&gt;使用方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;toggle-org-html-export-on-save&#34;&gt;toggle-org-html-export-on-save&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;情報元：&lt;a href=&#34;https://www.reddit.com/r/emacs/comments/4golh1/how%5Fto%5Fauto%5Fexport%5Fhtml%5Fwhen%5Fsaving%5Fin%5Forgmode/?sort=old&#34;&gt;How to auto export html when saving in org-mode?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例によって，下記のようにinit.orgに書き込めばよい．&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;begin_src emacs-lisp
(defun toggle-org-html-export-on-save ()
  (interactive)
  (&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (memq &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org-html-export-to-html&lt;/span&gt; after-save-hook)
      (&lt;span style=&#34;color:#66d9ef&#34;&gt;progn&lt;/span&gt;
        (remove-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;after-save-hook&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org-html-export-to-html&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
        (message &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Disabled org html export on save for current buffer...&amp;#34;&lt;/span&gt;))
    (add-hook &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;after-save-hook&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;org-html-export-to-html&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;t&lt;/span&gt;)
    (message &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Enabled org html export on save for current buffer...&amp;#34;&lt;/span&gt;)))
&lt;span style=&#34;color:#f92672&#34;&gt;#+&lt;/span&gt;end_src
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これで，toggle-org-html-export-on-saveで，htmlを自動で出力するかどうかを切り替え可能となる．しかし，これだけでは，org文書を保存するたびにブラウザーを手動でreloadしないといけなくなり，面倒である．自動でreloadしてくれるコマンドがあれば便利である．探してみると，これもネットに転がっていた．&lt;/p&gt;
&lt;h2 id=&#34;directoryの内容が変更されると-自動でhtmlを再読込する&#34;&gt;directoryの内容が変更されると，自動でhtmlを再読込する．&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;情報元：&lt;a href=&#34;http://brettterpstra.com/2011/03/07/watch-for-file-changes-and-refresh-your-browser-automatically/&#34;&gt;Watch for file changes and refresh your browser automatically&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;上記サイトに有るrubyのスクリプトが使えそうなので，頂いた．&lt;/li&gt;
&lt;li&gt;rubyのインストールについては，以下のようなサイトを参考
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/shinkuFencer/items/3679cfd966f6a61ccd1b&#34;&gt;MacにHomeBrew,rbenv,bundlerをインストールする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/prgseek/items/ff037cc6134ff9303c67&#34;&gt;Ruby入門 01.導入（Macに最新版のRubyを入れる）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/TAByasu/items/47c6cfbeeafad39eda07&#34;&gt;Ruby初学者のRuby On Rails 環境構築【Mac】&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;しかし，上記サイトのスクリプトをそのまま使用するとと，reloadの際にページの先頭まで戻ってしまい不便！&lt;/li&gt;
&lt;li&gt;結局，上記サイトのFirefox用のスクリプトを参考に少し書き換えた下記のSafari用のスクリプトを使用すると，reloadの際に先頭まで戻らないので，こちらを使用することとした．&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env ruby
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# watch.rb by Brett Terpstra, 2011 &amp;lt;http://brettterpstra.com&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# with credit to Carlo Zottmann &amp;lt;https://github.com/carlo/haml-sass-file-watcher&amp;gt;&lt;/span&gt;

trap&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SIGINT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt; exit &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ARGV.length &amp;lt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
   puts &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Usage: #{&lt;/span&gt;$0&lt;span style=&#34;color:#e6db74&#34;&gt;} watch_folder keyword&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
   puts &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Example: #{&lt;/span&gt;$0&lt;span style=&#34;color:#e6db74&#34;&gt;} . mywebproject&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
   exit
   end

   dev_extension &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dev&amp;#39;&lt;/span&gt;
   filetypes &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;css&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;html&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;htm&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;php&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;erb&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;less&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
   watch_folder &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ARGV&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
   keyword &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ARGV&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
   puts &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Watching #{watch_folder} and subfolders for changes in project files...&amp;#34;&lt;/span&gt;

   &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; true &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
         files &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
         filetypes.each &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;|type|
files &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; Dir.glob&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; File.join&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; watch_folder, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;**&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*.#{type}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
                        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
         new_hash &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; files.collect &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;|f| &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; f, File.stat&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;f&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.mtime.to_i &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
         hash &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; new_hash
         diff_hash &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; new_hash - hash

         unless diff_hash.empty?
         hash &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; new_hash

         diff_hash.each &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; |df|
             puts &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Detected change in #{df[0]}, refreshing&amp;#34;&lt;/span&gt;
         %x&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;osascript&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;ENDGAME
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                tell app &amp;#34;Safari&amp;#34; to activate
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                tell app &amp;#34;System Events&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                     keystroke &amp;#34;r&amp;#34; using command down
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                end tell
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ENDGAME&lt;/span&gt;
           &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
         end
         end

         sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
         end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;このスクリプトにwatch_safari.rbという名前をつけてパスが通っている/usr/local/binに保存し，chomod a+x watch_safari.rbとして実行権限を付けた．&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Usage: /usr/local/bin/watch_safari.rb watch_folder keyword&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;パスを通しておけば，watch_safari.rb watch_folder keyword で大丈夫&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用方法&#34;&gt;使用方法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;/Data/Hoge/Fuga/hogefuga.orgを書いているとすると以下のようにそのディレクトリをみはらせておく．&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ cd /Data/Hoge
$ watch_safari.rb Hoge hogefuga.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;org-modeでhogefuga.orgを書きはじめるときに，M-x toggle-org-html-export-on-save として保存するたびに自動的に新たなhtmlがexportされるようにする．&lt;/li&gt;
&lt;li&gt;最初だけは，C-e h oでhtmlをexportして，safariでhogefuga.htmlを開いておく．&lt;/li&gt;
&lt;li&gt;以降は，hogefuga.org文書を保存するたびに，現在見ている場所に戻った状態で最新のhtmlに更新されるようになる．便利である．&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上はOSX上のSafariを使用している場合であるが，他のブラウザーでも少し変更するだけで同じことができるはずである．&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
